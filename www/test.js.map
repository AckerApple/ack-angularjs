{"version":3,"sources":["webpack:///webpack/bootstrap 30c14c87f3eadb5971da","webpack:///./test-src/test.js","webpack:///./src/mock-injects.js","webpack:///./~/angular-mocks/angular-mocks.js","webpack:///./test-src/test-offline-storage.js","webpack:///./~/localforage/dist/localforage.js","webpack:///./src/ack-offline.service.js"],"names":["testApp","angular","module","name","describe","beforeEach","createDepject","sync","async","promise","syncject","asyncject","promiseject","args","callback","depjection","eval","done","inject","$rootScope","$apply","prom","then","catch","fail","Error","e","loaded","$rs","apply","push","data","error","RequestError","x","detail","message","code","status","constructor","prototype","Object","create","window","mock","$BrowserProvider","$get","$Browser","self","isMock","$$url","$$lastUrl","pollFns","outstandingRequestCount","outstandingRequestCallbacks","$$incOutstandingRequestCount","$$completeOutstandingRequest","fn","length","pop","notifyWhenNoOutstandingRequests","onUrlChange","listener","$$state","$$lastState","$$applicationDestroyed","noop","$$checkUrlChange","deferredFns","deferredNextId","defer","delay","time","now","id","sort","a","b","cancel","deferId","fnIndex","forEach","index","isDefined","splice","flush","nextTime","shift","$$baseHref","baseHref","poll","pollFn","url","replace","state","isUndefined","copy","$ExceptionHandlerProvider","handler","mode","errors","arguments","slice","call","$LogProvider","debug","concat","array1","array2","Array","debugEnabled","flag","$log","log","logs","warn","info","reset","assertEmpty","logLevel","logItem","String","stack","unshift","join","$IntervalProvider","$browser","$q","$$q","repeatFns","nextRepeatId","$interval","count","invokeApply","hasParams","iteration","skipApply","deferred","$$intervalId","tick","notify","resolve","undefined","reject","millis","task","jsonStringToDate","string","R_ISO8061_STR","match","date","Date","tzHour","tzMin","toInt","setUTCFullYear","setUTCHours","str","parseInt","padNumberInMock","num","digits","trim","neg","substr","TzDate","offset","timestamp","isString","tsStr","origDate","getTime","isNaN","localOffset","getTimezoneOffset","offsetDiff","toLocaleDateString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getDay","toISOString","unimplementedMethods","methodName","animate","config","$provide","factory","reflowFn","totalReflows","queue","queueFn","i","decorator","$delegate","runners","animateJsConstructor","animator","$closeAndFlush","runner","end","animateCssConstructor","element","options","$timeout","$$rAF","$animateCss","$$animateJs","$$forceReflow","$$animateAsyncRun","on","off","pin","reflows","enabled","closeAndFlush","hideErrors","$digest","doNextRun","somethingFlushed","method","event","dump","object","serialize","out","isElement","append","clone","html","isArray","o","isObject","isFunction","$eval","serializeScope","toJson","scope","$id","key","hasOwnProperty","child","$$childHead","$$nextSibling","$httpBackendDecorator","createHttpBackendMock","definitions","expectations","responses","responsesPush","bind","originalHttpBackend","$$originalHttpBackend","createResponse","headers","statusText","isNumber","$httpBackend","timeout","withCredentials","responseType","eventHandlers","uploadEventHandlers","xhr","MockXhr","expectation","wasExpected","$$events","upload","prettyPrint","RegExp","wrapResponse","wrapped","handleTimeout","handleResponse","response","params","$$respHeaders","getAllResponseHeaders","ii","matchData","matchHeaders","definition","passThrough","when","keys","assertArgDefined","MockHttpExpectation","chain","respond","createShortMethods","whenRoute","pathObj","parseRoute","regexp","ret","_","slash","option","optional","star","expect","expectRoute","skip","digest","part","verifyNoOutstandingExpectation","verifyNoOutstandingRequest","resetExpectations","prefix","getUrlParams","u","indexOf","split","compareUrl","m","d","h","matchUrl","test","equals","fromJson","toString","extend","parseQuery","pathParams","keyObj","exec","len","val","obj","key_value","queryStr","substring","keyValue","tryDecodeURIComponent","value","decodeURIComponent","createMockXhr","$$lastInstance","open","$$method","$$async","$$reqHeaders","send","$$data","setRequestHeader","getResponseHeader","header","lowercase","headerVal","headerName","lines","abort","addEventListener","$TimeoutDecorator","verifyNoPendingTasks","formatPendingTasksAsString","tasks","result","$RAFDecorator","rafFn","supported","originalRootElement","$RootElementProvider","$injector","createControllerDecorator","compileProvider","$ControllerDecorator","expression","locals","later","ident","preAssignBindingsEnabled","instantiate","instance","$ComponentControllerProvider","ComponentControllerProvider","$compileProvider","$controller","$componentController","componentName","bindings","directives","get","candidateDirectives","filter","directiveInfo","controller","controllerAs","restrict","$scope","$new","provider","$exceptionHandler","$rootElement","$RootScopeDecorator","e2e","$rootScopePrototype","getPrototypeOf","$countChildScopes","countChildScopes","$countWatchers","countWatchers","pendingChildHeads","currentScope","$$watchers","jasmineOrMocha","currentSpec","injectorState","InjectorState","annotatedFunctions","wasInjectorCreated","$$annotate","injector","$inject","moduleFns","workFn","modules","$modules","$providerInjector","invoke","$$beforeAllHook","before","beforeAll","$$afterAllHook","after","afterAll","$$currentSpec","to","sharedInjector","initialized","shared","sharedError","$$cleanup","$$beforeEach","k","$$afterEach","cleanupAfterEach","$$hashKey","rootNode","cleanUpNodes","cleanData","$destroy","fragments","callbacks","$$counter","setup","afterEach","teardown","ErrorAddingDeclarationLocationStack","errorForStack","line","sourceId","stackArray","blockFns","WorkFn","strictDi","$injectorStrict","moduleFn","annotate","jasmine","mocha","browserTrigger","eventType","eventData","nodeName","relatedTarget","y","inputType","type","toLowerCase","parentNode","pressed","evnt","WebKitTransitionEvent","initEvent","TransitionEvent","document","createEvent","initTransitionEvent","elapsedTime","WebKitAnimationEvent","AnimationEvent","initAnimationEvent","supportsTouchEvents","createTouchEvent","bubbles","cancelable","view","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","which","initMouseEvent","$manualTimeStamp","timeStamp","originalPreventDefault","preventDefault","appWindow","ownerDocument","defaultView","fakeProcessDefault","finalProcessDefault","supportsEventBubblingInDetachedTree","isAttachedToDocument","dispatchEvent","triggerForPath","_cached","createTouch","createTouchList","Event","touch","touches","doc","parent","createElement","cloneNode","appendChild","stop","_stopPropagation","stopPropagation","patchEventTargetForBubbling","target","_target","defineProperty","ackOffline","$http","_$http_","setItem","it","toEqual","set","getItem","cache","getCache","setCache","_timestamp","testBasicSetCache","toBe","timeDiff","toBeLessThan","toBeDefined","expires","data0","cacheResponse","getQueue","enqueue","clearQueue","handlers","spy","extraName","registerQueueHandler","fooSpy","callLog","barSpy","processQueues","supportsNav","navigator","AckOffline","removeItem","exists","_expired","stamp","diff","expired","addQueModel","QueModel","trans","onData","ErrorHandler","record","param","paramCache","items","_validate","isCheckExpired","allowExpired","isAllowExpired","err","Promise","res","rej","newCache","assign","queueData","onLine","find","getQueHandler","promises","hand","all","item","iterate","startsWith","promiseNameArray","remove"],"mappings":"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;;;;yBCRD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAA2D,mBAAmB,gDAAgD,aAAa,KAAK,MAAM,gCAAgC,SAAS,qCAAqC,SAAS,mCAAmC,OAAO,KAAK,OAAO,qBAAqB,aAAa,0BAA0B,0BAA0B,gBAAgB,UAAU,UAAU,0CAA0C,8BAAwB,oBAAoB,8CAA8C,qCAAqC,YAAY,YAAY,mCAAmC,iBAAiB,gBAAgB,sBAAsB,oBAAoB,0CAA0C,YAAY,WAAW,YAAY,SAAS,GAAG;AAClzB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA,EAAC,EAAE,MAAM;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,qIAAqI;AACtI,EAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;;AAEA,EAAC,qIAAqI;AACtI,EAAC,EAAE,MAAM;AACT;;AAEA,qGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,sBAAqB;AACrB,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,qCAAoC,yBAAyB;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAmC,YAAY;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB,sBAAqB;AACrB,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,yBAAyB;AAC5D;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA6C,QAAQ;AACrD;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,oBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAuC;AACvC,iCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA6C;AAC7C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;;;AAGA;;AAEA;;AAEA,EAAC,EAAE,MAAM,EAAE,GAAG;AACd,EAAC,E;;;;;;;;;;;;;sjBC5vED;;;AACA;;;;;;;;AACA;;AAEA,KAAM0B,cAAc,OAAOC,SAAP,IAAmB,WAAvC;;KAEqBC,U;AACnB,uBAAYhC,KAAZ,EAAkB;AAAA;;AAChB,UAAKA,KAAL,GAAaA,KAAb;AACA,UAAK7N,MAAL,GAAc,SAAd;AACA,UAAKmP,QAAL,GAAgB,EAAhB;AACD;;;;4BAGMhjB,I,EAAK;AACV,cAAO,sBAAY2jB,UAAZ,CAAuB,KAAK9P,MAAL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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 30c14c87f3eadb5971da","import {module} from \"../src/mock-injects\"\nimport testOfflineStorage from \"./test-offline-storage\"\n\nconst testApp = angular.module('test-ack-angular',['ngMockE2E']).name\n\ndescribe('app', ()=>{\n  beforeEach(function(){\n    module(testApp)\n  })\n\n  describe('offline-storage', testOfflineStorage)\n})\n\n\n\n// WEBPACK FOOTER //\n// ./test-src/test.js","import mocks from \"angular-mocks\"\n\nexport function createDepject(args, callback){\n  var depjection = eval('(function('+args+'){var args=Array.prototype.slice.call(arguments);callback(args)})')\n  return depjection\n}\n\nexport function sync(callback){\n  return function(done){\n    mocks.inject($rootScope=>{\n      callback()\n      $rootScope.$apply()\n      done()\n    })\n  }\n}\n\nexport function async(callback){\n  return function(done){\n    mocks.inject($rootScope=>{\n      callback(done)\n      $rootScope.$apply()\n    })\n  }\n}\n\nexport function promise(callback){\n  return function(done){\n    mocks.inject($rootScope=>{\n      try{\n        var prom = callback()\n\n\n        if(prom.then && prom.catch){\n          prom.then(done).catch(done.fail||done)\n        }else{\n          throw new Error('Expected promise in return from mock-injects.promise callback')\n        }\n\n        $rootScope.$apply()\n      }catch(e){\n        done.fail ? done.fail(e) : done(e)\n      }\n    })\n  }\n}\n\nexport function syncject(args, callback){\n  var loaded, $rs\n\n  return done=>{\n    loaded = args=>{\n      //args.push(done)\n      try{\n        callback.apply(null, args)\n        $rs.$apply();\n        done()\n      }catch(e){\n        done.fail ? done.fail(e) : done(e)\n      }\n    }\n\n    var depjection = createDepject(args,loaded)\n\n    mocks.inject($rootScope=>{\n      $rs = $rootScope\n      mocks.inject(depjection)\n    })\n  }\n}\n\nexport function asyncject(args, callback){\n  var loaded, $rs\n\n  return done=>{\n    loaded = args=>{\n      args.push(done)\n      callback.apply(null, args)\n      $rs.$apply();\n    }\n\n    var depjection = createDepject(args, loaded)\n    \n    mocks.inject($rootScope=>{\n      $rs = $rootScope\n      mocks.inject(depjection)\n    })\n  }\n}\n\nexport function promiseject(args, callback){\n  var loaded, $rs\n\n  return done=>{\n    loaded = args=>{\n      args.push(done)\n      \n      try{\n        var prom = callback.apply(null, args)\n\n        if(prom.then && prom.catch){\n          prom.then(done).catch(e=>{\n            if(e && e.data && e.data.error){\n              let error = new RequestError()\n\n              for(let x in e.data.error){\n                error[x] = e.data.error[x]\n              }\n\n              if(error && error.detail && !error.message){\n                error.message = error.detail\n              }\n\n              error.code = error.code || e.status\n              error.status = error.status || e.status\n              \n              e = error\n            }\n\n            done.fail?done.fail(e):done(e)\n          })\n        }else{\n          throw new Error('Expected promise in return from mock-injects.promiseject callback')\n        }\n\n        $rs.$apply()\n      }catch(e){\n        done.fail ? done.fail(e) : done(e)\n      }\n    }\n\n    var depjection = createDepject(args, loaded)\n    \n    mocks.inject(['$rootScope',$rootScope=>{\n      $rs = $rootScope\n      mocks.inject(depjection)\n    }])\n  }\n}\n\nexport let module = mocks.module;\nexport let inject = mocks.inject;\n\nexport default {\n  sync: sync,\n  async: async,\n  promise: promise,\n  syncject: syncject,\n  asyncject: asyncject,\n  promiseject: promiseject,\n  module: mocks.module,\n  inject: mocks.inject\n}\n\n\nfunction RequestError(message){\n  this.name = this.constructor.name;\n  //this.status = 400;\n  //this.code = \"bad_request\";\n  this.message = message || \"RequestError\";\n  return this\n}\nRequestError.prototype = Object.create(Error.prototype)\n\n\n\n// WEBPACK FOOTER //\n// ./src/mock-injects.js","/**\n * @license AngularJS v1.6.2-build.5236+sha.74e232d\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {\n\n'use strict';\n\n/**\n * @ngdoc object\n * @name angular.mock\n * @description\n *\n * Namespace from 'angular-mocks.js' which contains testing related code.\n *\n */\nangular.mock = {};\n\n/**\n * ! This is a private undocumented service !\n *\n * @name $browser\n *\n * @description\n * This service is a mock implementation of {@link ng.$browser}. It provides fake\n * implementation for commonly used browser apis that are hard to test, e.g. setTimeout, xhr,\n * cookies, etc.\n *\n * The api of this service is the same as that of the real {@link ng.$browser $browser}, except\n * that there are several helper methods available which can be used in tests.\n */\nangular.mock.$BrowserProvider = function() {\n  this.$get = function() {\n    return new angular.mock.$Browser();\n  };\n};\n\nangular.mock.$Browser = function() {\n  var self = this;\n\n  this.isMock = true;\n  self.$$url = 'http://server/';\n  self.$$lastUrl = self.$$url; // used by url polling fn\n  self.pollFns = [];\n\n  // Testability API\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n  self.$$completeOutstandingRequest = function(fn) {\n    try {\n      fn();\n    } finally {\n      outstandingRequestCount--;\n      if (!outstandingRequestCount) {\n        while (outstandingRequestCallbacks.length) {\n          outstandingRequestCallbacks.pop()();\n        }\n      }\n    }\n  };\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    if (outstandingRequestCount) {\n      outstandingRequestCallbacks.push(callback);\n    } else {\n      callback();\n    }\n  };\n\n  // register url polling fn\n\n  self.onUrlChange = function(listener) {\n    self.pollFns.push(\n      function() {\n        if (self.$$lastUrl !== self.$$url || self.$$state !== self.$$lastState) {\n          self.$$lastUrl = self.$$url;\n          self.$$lastState = self.$$state;\n          listener(self.$$url, self.$$state);\n        }\n      }\n    );\n\n    return listener;\n  };\n\n  self.$$applicationDestroyed = angular.noop;\n  self.$$checkUrlChange = angular.noop;\n\n  self.deferredFns = [];\n  self.deferredNextId = 0;\n\n  self.defer = function(fn, delay) {\n    // Note that we do not use `$$incOutstandingRequestCount` or `$$completeOutstandingRequest`\n    // in this mock implementation.\n    delay = delay || 0;\n    self.deferredFns.push({time:(self.defer.now + delay), fn:fn, id: self.deferredNextId});\n    self.deferredFns.sort(function(a, b) { return a.time - b.time;});\n    return self.deferredNextId++;\n  };\n\n\n  /**\n   * @name $browser#defer.now\n   *\n   * @description\n   * Current milliseconds mock time.\n   */\n  self.defer.now = 0;\n\n\n  self.defer.cancel = function(deferId) {\n    var fnIndex;\n\n    angular.forEach(self.deferredFns, function(fn, index) {\n      if (fn.id === deferId) fnIndex = index;\n    });\n\n    if (angular.isDefined(fnIndex)) {\n      self.deferredFns.splice(fnIndex, 1);\n      return true;\n    }\n\n    return false;\n  };\n\n\n  /**\n   * @name $browser#defer.flush\n   *\n   * @description\n   * Flushes all pending requests and executes the defer callbacks.\n   *\n   * @param {number=} number of milliseconds to flush. See {@link #defer.now}\n   */\n  self.defer.flush = function(delay) {\n    var nextTime;\n\n    if (angular.isDefined(delay)) {\n      // A delay was passed so compute the next time\n      nextTime = self.defer.now + delay;\n    } else {\n      if (self.deferredFns.length) {\n        // No delay was passed so set the next time so that it clears the deferred queue\n        nextTime = self.deferredFns[self.deferredFns.length - 1].time;\n      } else {\n        // No delay passed, but there are no deferred tasks so flush - indicates an error!\n        throw new Error('No deferred tasks to be flushed');\n      }\n    }\n\n    while (self.deferredFns.length && self.deferredFns[0].time <= nextTime) {\n      // Increment the time and call the next deferred function\n      self.defer.now = self.deferredFns[0].time;\n      self.deferredFns.shift().fn();\n    }\n\n    // Ensure that the current time is correct\n    self.defer.now = nextTime;\n  };\n\n  self.$$baseHref = '/';\n  self.baseHref = function() {\n    return this.$$baseHref;\n  };\n};\nangular.mock.$Browser.prototype = {\n\n  /**\n   * @name $browser#poll\n   *\n   * @description\n   * run all fns in pollFns\n   */\n  poll: function poll() {\n    angular.forEach(this.pollFns, function(pollFn) {\n      pollFn();\n    });\n  },\n\n  url: function(url, replace, state) {\n    if (angular.isUndefined(state)) {\n      state = null;\n    }\n    if (url) {\n      this.$$url = url;\n      // Native pushState serializes & copies the object; simulate it.\n      this.$$state = angular.copy(state);\n      return this;\n    }\n\n    return this.$$url;\n  },\n\n  state: function() {\n    return this.$$state;\n  }\n};\n\n\n/**\n * @ngdoc provider\n * @name $exceptionHandlerProvider\n *\n * @description\n * Configures the mock implementation of {@link ng.$exceptionHandler} to rethrow or to log errors\n * passed to the `$exceptionHandler`.\n */\n\n/**\n * @ngdoc service\n * @name $exceptionHandler\n *\n * @description\n * Mock implementation of {@link ng.$exceptionHandler} that rethrows or logs errors passed\n * to it. See {@link ngMock.$exceptionHandlerProvider $exceptionHandlerProvider} for configuration\n * information.\n *\n *\n * ```js\n *   describe('$exceptionHandlerProvider', function() {\n *\n *     it('should capture log messages and exceptions', function() {\n *\n *       module(function($exceptionHandlerProvider) {\n *         $exceptionHandlerProvider.mode('log');\n *       });\n *\n *       inject(function($log, $exceptionHandler, $timeout) {\n *         $timeout(function() { $log.log(1); });\n *         $timeout(function() { $log.log(2); throw 'banana peel'; });\n *         $timeout(function() { $log.log(3); });\n *         expect($exceptionHandler.errors).toEqual([]);\n *         expect($log.assertEmpty());\n *         $timeout.flush();\n *         expect($exceptionHandler.errors).toEqual(['banana peel']);\n *         expect($log.log.logs).toEqual([[1], [2], [3]]);\n *       });\n *     });\n *   });\n * ```\n */\n\nangular.mock.$ExceptionHandlerProvider = function() {\n  var handler;\n\n  /**\n   * @ngdoc method\n   * @name $exceptionHandlerProvider#mode\n   *\n   * @description\n   * Sets the logging mode.\n   *\n   * @param {string} mode Mode of operation, defaults to `rethrow`.\n   *\n   *   - `log`: Sometimes it is desirable to test that an error is thrown, for this case the `log`\n   *     mode stores an array of errors in `$exceptionHandler.errors`, to allow later assertion of\n   *     them. See {@link ngMock.$log#assertEmpty assertEmpty()} and\n   *     {@link ngMock.$log#reset reset()}.\n   *   - `rethrow`: If any errors are passed to the handler in tests, it typically means that there\n   *     is a bug in the application or test, so this mock will make these tests fail. For any\n   *     implementations that expect exceptions to be thrown, the `rethrow` mode will also maintain\n   *     a log of thrown errors in `$exceptionHandler.errors`.\n   */\n  this.mode = function(mode) {\n\n    switch (mode) {\n      case 'log':\n      case 'rethrow':\n        var errors = [];\n        handler = function(e) {\n          if (arguments.length === 1) {\n            errors.push(e);\n          } else {\n            errors.push([].slice.call(arguments, 0));\n          }\n          if (mode === 'rethrow') {\n            throw e;\n          }\n        };\n        handler.errors = errors;\n        break;\n      default:\n        throw new Error('Unknown mode \\'' + mode + '\\', only \\'log\\'/\\'rethrow\\' modes are allowed!');\n    }\n  };\n\n  this.$get = function() {\n    return handler;\n  };\n\n  this.mode('rethrow');\n};\n\n\n/**\n * @ngdoc service\n * @name $log\n *\n * @description\n * Mock implementation of {@link ng.$log} that gathers all logged messages in arrays\n * (one array per logging level). These arrays are exposed as `logs` property of each of the\n * level-specific log function, e.g. for level `error` the array is exposed as `$log.error.logs`.\n *\n */\nangular.mock.$LogProvider = function() {\n  var debug = true;\n\n  function concat(array1, array2, index) {\n    return array1.concat(Array.prototype.slice.call(array2, index));\n  }\n\n  this.debugEnabled = function(flag) {\n    if (angular.isDefined(flag)) {\n      debug = flag;\n      return this;\n    } else {\n      return debug;\n    }\n  };\n\n  this.$get = function() {\n    var $log = {\n      log: function() { $log.log.logs.push(concat([], arguments, 0)); },\n      warn: function() { $log.warn.logs.push(concat([], arguments, 0)); },\n      info: function() { $log.info.logs.push(concat([], arguments, 0)); },\n      error: function() { $log.error.logs.push(concat([], arguments, 0)); },\n      debug: function() {\n        if (debug) {\n          $log.debug.logs.push(concat([], arguments, 0));\n        }\n      }\n    };\n\n    /**\n     * @ngdoc method\n     * @name $log#reset\n     *\n     * @description\n     * Reset all of the logging arrays to empty.\n     */\n    $log.reset = function() {\n      /**\n       * @ngdoc property\n       * @name $log#log.logs\n       *\n       * @description\n       * Array of messages logged using {@link ng.$log#log `log()`}.\n       *\n       * @example\n       * ```js\n       * $log.log('Some Log');\n       * var first = $log.log.logs.unshift();\n       * ```\n       */\n      $log.log.logs = [];\n      /**\n       * @ngdoc property\n       * @name $log#info.logs\n       *\n       * @description\n       * Array of messages logged using {@link ng.$log#info `info()`}.\n       *\n       * @example\n       * ```js\n       * $log.info('Some Info');\n       * var first = $log.info.logs.unshift();\n       * ```\n       */\n      $log.info.logs = [];\n      /**\n       * @ngdoc property\n       * @name $log#warn.logs\n       *\n       * @description\n       * Array of messages logged using {@link ng.$log#warn `warn()`}.\n       *\n       * @example\n       * ```js\n       * $log.warn('Some Warning');\n       * var first = $log.warn.logs.unshift();\n       * ```\n       */\n      $log.warn.logs = [];\n      /**\n       * @ngdoc property\n       * @name $log#error.logs\n       *\n       * @description\n       * Array of messages logged using {@link ng.$log#error `error()`}.\n       *\n       * @example\n       * ```js\n       * $log.error('Some Error');\n       * var first = $log.error.logs.unshift();\n       * ```\n       */\n      $log.error.logs = [];\n        /**\n       * @ngdoc property\n       * @name $log#debug.logs\n       *\n       * @description\n       * Array of messages logged using {@link ng.$log#debug `debug()`}.\n       *\n       * @example\n       * ```js\n       * $log.debug('Some Error');\n       * var first = $log.debug.logs.unshift();\n       * ```\n       */\n      $log.debug.logs = [];\n    };\n\n    /**\n     * @ngdoc method\n     * @name $log#assertEmpty\n     *\n     * @description\n     * Assert that all of the logging methods have no logged messages. If any messages are present,\n     * an exception is thrown.\n     */\n    $log.assertEmpty = function() {\n      var errors = [];\n      angular.forEach(['error', 'warn', 'info', 'log', 'debug'], function(logLevel) {\n        angular.forEach($log[logLevel].logs, function(log) {\n          angular.forEach(log, function(logItem) {\n            errors.push('MOCK $log (' + logLevel + '): ' + String(logItem) + '\\n' +\n                        (logItem.stack || ''));\n          });\n        });\n      });\n      if (errors.length) {\n        errors.unshift('Expected $log to be empty! Either a message was logged unexpectedly, or ' +\n          'an expected log message was not checked and removed:');\n        errors.push('');\n        throw new Error(errors.join('\\n---------\\n'));\n      }\n    };\n\n    $log.reset();\n    return $log;\n  };\n};\n\n\n/**\n * @ngdoc service\n * @name $interval\n *\n * @description\n * Mock implementation of the $interval service.\n *\n * Use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\n * move forward by `millis` milliseconds and trigger any functions scheduled to run in that\n * time.\n *\n * @param {function()} fn A function that should be called repeatedly.\n * @param {number} delay Number of milliseconds between each function call.\n * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat\n *   indefinitely.\n * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n * @param {...*=} Pass additional parameters to the executed function.\n * @returns {promise} A promise which will be notified on each iteration.\n */\nangular.mock.$IntervalProvider = function() {\n  this.$get = ['$browser', '$rootScope', '$q', '$$q',\n       function($browser,   $rootScope,   $q,   $$q) {\n    var repeatFns = [],\n        nextRepeatId = 0,\n        now = 0;\n\n    var $interval = function(fn, delay, count, invokeApply) {\n      var hasParams = arguments.length > 4,\n          args = hasParams ? Array.prototype.slice.call(arguments, 4) : [],\n          iteration = 0,\n          skipApply = (angular.isDefined(invokeApply) && !invokeApply),\n          deferred = (skipApply ? $$q : $q).defer(),\n          promise = deferred.promise;\n\n      count = (angular.isDefined(count)) ? count : 0;\n      promise.then(null, function() {}, (!hasParams) ? fn : function() {\n        fn.apply(null, args);\n      });\n\n      promise.$$intervalId = nextRepeatId;\n\n      function tick() {\n        deferred.notify(iteration++);\n\n        if (count > 0 && iteration >= count) {\n          var fnIndex;\n          deferred.resolve(iteration);\n\n          angular.forEach(repeatFns, function(fn, index) {\n            if (fn.id === promise.$$intervalId) fnIndex = index;\n          });\n\n          if (angular.isDefined(fnIndex)) {\n            repeatFns.splice(fnIndex, 1);\n          }\n        }\n\n        if (skipApply) {\n          $browser.defer.flush();\n        } else {\n          $rootScope.$apply();\n        }\n      }\n\n      repeatFns.push({\n        nextTime:(now + delay),\n        delay: delay,\n        fn: tick,\n        id: nextRepeatId,\n        deferred: deferred\n      });\n      repeatFns.sort(function(a, b) { return a.nextTime - b.nextTime;});\n\n      nextRepeatId++;\n      return promise;\n    };\n    /**\n     * @ngdoc method\n     * @name $interval#cancel\n     *\n     * @description\n     * Cancels a task associated with the `promise`.\n     *\n     * @param {promise} promise A promise from calling the `$interval` function.\n     * @returns {boolean} Returns `true` if the task was successfully cancelled.\n     */\n    $interval.cancel = function(promise) {\n      if (!promise) return false;\n      var fnIndex;\n\n      angular.forEach(repeatFns, function(fn, index) {\n        if (fn.id === promise.$$intervalId) fnIndex = index;\n      });\n\n      if (angular.isDefined(fnIndex)) {\n        repeatFns[fnIndex].deferred.promise.then(undefined, function() {});\n        repeatFns[fnIndex].deferred.reject('canceled');\n        repeatFns.splice(fnIndex, 1);\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * @ngdoc method\n     * @name $interval#flush\n     * @description\n     *\n     * Runs interval tasks scheduled to be run in the next `millis` milliseconds.\n     *\n     * @param {number=} millis maximum timeout amount to flush up until.\n     *\n     * @return {number} The amount of time moved forward.\n     */\n    $interval.flush = function(millis) {\n      now += millis;\n      while (repeatFns.length && repeatFns[0].nextTime <= now) {\n        var task = repeatFns[0];\n        task.fn();\n        task.nextTime += task.delay;\n        repeatFns.sort(function(a, b) { return a.nextTime - b.nextTime;});\n      }\n      return millis;\n    };\n\n    return $interval;\n  }];\n};\n\n\nfunction jsonStringToDate(string) {\n  // The R_ISO8061_STR regex is never going to fit into the 100 char limit!\n  // eslit-disable-next-line max-len\n  var R_ISO8061_STR = /^(-?\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d{3}))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d)))?$/;\n\n  var match;\n  if ((match = string.match(R_ISO8061_STR))) {\n    var date = new Date(0),\n        tzHour = 0,\n        tzMin  = 0;\n    if (match[9]) {\n      tzHour = toInt(match[9] + match[10]);\n      tzMin = toInt(match[9] + match[11]);\n    }\n    date.setUTCFullYear(toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n    date.setUTCHours(toInt(match[4] || 0) - tzHour,\n                     toInt(match[5] || 0) - tzMin,\n                     toInt(match[6] || 0),\n                     toInt(match[7] || 0));\n    return date;\n  }\n  return string;\n}\n\nfunction toInt(str) {\n  return parseInt(str, 10);\n}\n\nfunction padNumberInMock(num, digits, trim) {\n  var neg = '';\n  if (num < 0) {\n    neg =  '-';\n    num = -num;\n  }\n  num = '' + num;\n  while (num.length < digits) num = '0' + num;\n  if (trim) {\n    num = num.substr(num.length - digits);\n  }\n  return neg + num;\n}\n\n\n/**\n * @ngdoc type\n * @name angular.mock.TzDate\n * @description\n *\n * *NOTE*: this is not an injectable instance, just a globally available mock class of `Date`.\n *\n * Mock of the Date type which has its timezone specified via constructor arg.\n *\n * The main purpose is to create Date-like instances with timezone fixed to the specified timezone\n * offset, so that we can test code that depends on local timezone settings without dependency on\n * the time zone settings of the machine where the code is running.\n *\n * @param {number} offset Offset of the *desired* timezone in hours (fractions will be honored)\n * @param {(number|string)} timestamp Timestamp representing the desired time in *UTC*\n *\n * @example\n * !!!! WARNING !!!!!\n * This is not a complete Date object so only methods that were implemented can be called safely.\n * To make matters worse, TzDate instances inherit stuff from Date via a prototype.\n *\n * We do our best to intercept calls to \"unimplemented\" methods, but since the list of methods is\n * incomplete we might be missing some non-standard methods. This can result in errors like:\n * \"Date.prototype.foo called on incompatible Object\".\n *\n * ```js\n * var newYearInBratislava = new TzDate(-1, '2009-12-31T23:00:00Z');\n * newYearInBratislava.getTimezoneOffset() => -60;\n * newYearInBratislava.getFullYear() => 2010;\n * newYearInBratislava.getMonth() => 0;\n * newYearInBratislava.getDate() => 1;\n * newYearInBratislava.getHours() => 0;\n * newYearInBratislava.getMinutes() => 0;\n * newYearInBratislava.getSeconds() => 0;\n * ```\n *\n */\nangular.mock.TzDate = function(offset, timestamp) {\n  var self = new Date(0);\n  if (angular.isString(timestamp)) {\n    var tsStr = timestamp;\n\n    self.origDate = jsonStringToDate(timestamp);\n\n    timestamp = self.origDate.getTime();\n    if (isNaN(timestamp)) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        name: 'Illegal Argument',\n        message: 'Arg \\'' + tsStr + '\\' passed into TzDate constructor is not a valid date string'\n      };\n    }\n  } else {\n    self.origDate = new Date(timestamp);\n  }\n\n  var localOffset = new Date(timestamp).getTimezoneOffset();\n  self.offsetDiff = localOffset * 60 * 1000 - offset * 1000 * 60 * 60;\n  self.date = new Date(timestamp + self.offsetDiff);\n\n  self.getTime = function() {\n    return self.date.getTime() - self.offsetDiff;\n  };\n\n  self.toLocaleDateString = function() {\n    return self.date.toLocaleDateString();\n  };\n\n  self.getFullYear = function() {\n    return self.date.getFullYear();\n  };\n\n  self.getMonth = function() {\n    return self.date.getMonth();\n  };\n\n  self.getDate = function() {\n    return self.date.getDate();\n  };\n\n  self.getHours = function() {\n    return self.date.getHours();\n  };\n\n  self.getMinutes = function() {\n    return self.date.getMinutes();\n  };\n\n  self.getSeconds = function() {\n    return self.date.getSeconds();\n  };\n\n  self.getMilliseconds = function() {\n    return self.date.getMilliseconds();\n  };\n\n  self.getTimezoneOffset = function() {\n    return offset * 60;\n  };\n\n  self.getUTCFullYear = function() {\n    return self.origDate.getUTCFullYear();\n  };\n\n  self.getUTCMonth = function() {\n    return self.origDate.getUTCMonth();\n  };\n\n  self.getUTCDate = function() {\n    return self.origDate.getUTCDate();\n  };\n\n  self.getUTCHours = function() {\n    return self.origDate.getUTCHours();\n  };\n\n  self.getUTCMinutes = function() {\n    return self.origDate.getUTCMinutes();\n  };\n\n  self.getUTCSeconds = function() {\n    return self.origDate.getUTCSeconds();\n  };\n\n  self.getUTCMilliseconds = function() {\n    return self.origDate.getUTCMilliseconds();\n  };\n\n  self.getDay = function() {\n    return self.date.getDay();\n  };\n\n  // provide this method only on browsers that already have it\n  if (self.toISOString) {\n    self.toISOString = function() {\n      return padNumberInMock(self.origDate.getUTCFullYear(), 4) + '-' +\n            padNumberInMock(self.origDate.getUTCMonth() + 1, 2) + '-' +\n            padNumberInMock(self.origDate.getUTCDate(), 2) + 'T' +\n            padNumberInMock(self.origDate.getUTCHours(), 2) + ':' +\n            padNumberInMock(self.origDate.getUTCMinutes(), 2) + ':' +\n            padNumberInMock(self.origDate.getUTCSeconds(), 2) + '.' +\n            padNumberInMock(self.origDate.getUTCMilliseconds(), 3) + 'Z';\n    };\n  }\n\n  //hide all methods not implemented in this mock that the Date prototype exposes\n  var unimplementedMethods = ['getUTCDay',\n      'getYear', 'setDate', 'setFullYear', 'setHours', 'setMilliseconds',\n      'setMinutes', 'setMonth', 'setSeconds', 'setTime', 'setUTCDate', 'setUTCFullYear',\n      'setUTCHours', 'setUTCMilliseconds', 'setUTCMinutes', 'setUTCMonth', 'setUTCSeconds',\n      'setYear', 'toDateString', 'toGMTString', 'toJSON', 'toLocaleFormat', 'toLocaleString',\n      'toLocaleTimeString', 'toSource', 'toString', 'toTimeString', 'toUTCString', 'valueOf'];\n\n  angular.forEach(unimplementedMethods, function(methodName) {\n    self[methodName] = function() {\n      throw new Error('Method \\'' + methodName + '\\' is not implemented in the TzDate mock');\n    };\n  });\n\n  return self;\n};\n\n//make \"tzDateInstance instanceof Date\" return true\nangular.mock.TzDate.prototype = Date.prototype;\n\n\n/**\n * @ngdoc service\n * @name $animate\n *\n * @description\n * Mock implementation of the {@link ng.$animate `$animate`} service. Exposes two additional methods\n * for testing animations.\n *\n * You need to require the `ngAnimateMock` module in your test suite for instance `beforeEach(module('ngAnimateMock'))`\n */\nangular.mock.animate = angular.module('ngAnimateMock', ['ng'])\n\n  .config(['$provide', function($provide) {\n\n    $provide.factory('$$forceReflow', function() {\n      function reflowFn() {\n        reflowFn.totalReflows++;\n      }\n      reflowFn.totalReflows = 0;\n      return reflowFn;\n    });\n\n    $provide.factory('$$animateAsyncRun', function() {\n      var queue = [];\n      var queueFn = function() {\n        return function(fn) {\n          queue.push(fn);\n        };\n      };\n      queueFn.flush = function() {\n        if (queue.length === 0) return false;\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i]();\n        }\n        queue = [];\n\n        return true;\n      };\n      return queueFn;\n    });\n\n    $provide.decorator('$$animateJs', ['$delegate', function($delegate) {\n      var runners = [];\n\n      var animateJsConstructor = function() {\n        var animator = $delegate.apply($delegate, arguments);\n        // If no javascript animation is found, animator is undefined\n        if (animator) {\n          runners.push(animator);\n        }\n        return animator;\n      };\n\n      animateJsConstructor.$closeAndFlush = function() {\n        runners.forEach(function(runner) {\n          runner.end();\n        });\n        runners = [];\n      };\n\n      return animateJsConstructor;\n    }]);\n\n    $provide.decorator('$animateCss', ['$delegate', function($delegate) {\n      var runners = [];\n\n      var animateCssConstructor = function(element, options) {\n        var animator = $delegate(element, options);\n        runners.push(animator);\n        return animator;\n      };\n\n      animateCssConstructor.$closeAndFlush = function() {\n        runners.forEach(function(runner) {\n          runner.end();\n        });\n        runners = [];\n      };\n\n      return animateCssConstructor;\n    }]);\n\n    $provide.decorator('$animate', ['$delegate', '$timeout', '$browser', '$$rAF', '$animateCss', '$$animateJs',\n                                    '$$forceReflow', '$$animateAsyncRun', '$rootScope',\n                            function($delegate,   $timeout,   $browser,   $$rAF,   $animateCss,   $$animateJs,\n                                     $$forceReflow,   $$animateAsyncRun,  $rootScope) {\n      var animate = {\n        queue: [],\n        cancel: $delegate.cancel,\n        on: $delegate.on,\n        off: $delegate.off,\n        pin: $delegate.pin,\n        get reflows() {\n          return $$forceReflow.totalReflows;\n        },\n        enabled: $delegate.enabled,\n        /**\n         * @ngdoc method\n         * @name $animate#closeAndFlush\n         * @description\n         *\n         * This method will close all pending animations (both {@link ngAnimate#javascript-based-animations Javascript}\n         * and {@link ngAnimate.$animateCss CSS}) and it will also flush any remaining animation frames and/or callbacks.\n         */\n        closeAndFlush: function() {\n          // we allow the flush command to swallow the errors\n          // because depending on whether CSS or JS animations are\n          // used, there may not be a RAF flush. The primary flush\n          // at the end of this function must throw an exception\n          // because it will track if there were pending animations\n          this.flush(true);\n          $animateCss.$closeAndFlush();\n          $$animateJs.$closeAndFlush();\n          this.flush();\n        },\n        /**\n         * @ngdoc method\n         * @name $animate#flush\n         * @description\n         *\n         * This method is used to flush the pending callbacks and animation frames to either start\n         * an animation or conclude an animation. Note that this will not actually close an\n         * actively running animation (see {@link ngMock.$animate#closeAndFlush `closeAndFlush()`} for that).\n         */\n        flush: function(hideErrors) {\n          $rootScope.$digest();\n\n          var doNextRun, somethingFlushed = false;\n          do {\n            doNextRun = false;\n\n            if ($$rAF.queue.length) {\n              $$rAF.flush();\n              doNextRun = somethingFlushed = true;\n            }\n\n            if ($$animateAsyncRun.flush()) {\n              doNextRun = somethingFlushed = true;\n            }\n          } while (doNextRun);\n\n          if (!somethingFlushed && !hideErrors) {\n            throw new Error('No pending animations ready to be closed or flushed');\n          }\n\n          $rootScope.$digest();\n        }\n      };\n\n      angular.forEach(\n        ['animate','enter','leave','move','addClass','removeClass','setClass'], function(method) {\n        animate[method] = function() {\n          animate.queue.push({\n            event: method,\n            element: arguments[0],\n            options: arguments[arguments.length - 1],\n            args: arguments\n          });\n          return $delegate[method].apply($delegate, arguments);\n        };\n      });\n\n      return animate;\n    }]);\n\n  }]);\n\n\n/**\n * @ngdoc function\n * @name angular.mock.dump\n * @description\n *\n * *NOTE*: This is not an injectable instance, just a globally available function.\n *\n * Method for serializing common angular objects (scope, elements, etc..) into strings.\n * It is useful for logging objects to the console when debugging.\n *\n * @param {*} object - any object to turn into string.\n * @return {string} a serialized string of the argument\n */\nangular.mock.dump = function(object) {\n  return serialize(object);\n\n  function serialize(object) {\n    var out;\n\n    if (angular.isElement(object)) {\n      object = angular.element(object);\n      out = angular.element('<div></div>');\n      angular.forEach(object, function(element) {\n        out.append(angular.element(element).clone());\n      });\n      out = out.html();\n    } else if (angular.isArray(object)) {\n      out = [];\n      angular.forEach(object, function(o) {\n        out.push(serialize(o));\n      });\n      out = '[ ' + out.join(', ') + ' ]';\n    } else if (angular.isObject(object)) {\n      if (angular.isFunction(object.$eval) && angular.isFunction(object.$apply)) {\n        out = serializeScope(object);\n      } else if (object instanceof Error) {\n        out = object.stack || ('' + object.name + ': ' + object.message);\n      } else {\n        // TODO(i): this prevents methods being logged,\n        // we should have a better way to serialize objects\n        out = angular.toJson(object, true);\n      }\n    } else {\n      out = String(object);\n    }\n\n    return out;\n  }\n\n  function serializeScope(scope, offset) {\n    offset = offset ||  '  ';\n    var log = [offset + 'Scope(' + scope.$id + '): {'];\n    for (var key in scope) {\n      if (Object.prototype.hasOwnProperty.call(scope, key) && !key.match(/^(\\$|this)/)) {\n        log.push('  ' + key + ': ' + angular.toJson(scope[key]));\n      }\n    }\n    var child = scope.$$childHead;\n    while (child) {\n      log.push(serializeScope(child, offset + '  '));\n      child = child.$$nextSibling;\n    }\n    log.push('}');\n    return log.join('\\n' + offset);\n  }\n};\n\n/**\n * @ngdoc service\n * @name $httpBackend\n * @description\n * Fake HTTP backend implementation suitable for unit testing applications that use the\n * {@link ng.$http $http service}.\n *\n * <div class=\"alert alert-info\">\n * **Note**: For fake HTTP backend implementation suitable for end-to-end testing or backend-less\n * development please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.\n * </div>\n *\n * During unit testing, we want our unit tests to run quickly and have no external dependencies so\n * we don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or\n * [JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is\n * to verify whether a certain request has been sent or not, or alternatively just let the\n * application make requests, respond with pre-trained responses and assert that the end result is\n * what we expect it to be.\n *\n * This mock implementation can be used to respond with static or dynamic responses via the\n * `expect` and `when` apis and their shortcuts (`expectGET`, `whenPOST`, etc).\n *\n * When an Angular application needs some data from a server, it calls the $http service, which\n * sends the request to a real server using $httpBackend service. With dependency injection, it is\n * easy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify\n * the requests and respond with some testing data without sending a request to a real server.\n *\n * There are two ways to specify what test data should be returned as http responses by the mock\n * backend when the code under test makes http requests:\n *\n * - `$httpBackend.expect` - specifies a request expectation\n * - `$httpBackend.when` - specifies a backend definition\n *\n *\n * ## Request Expectations vs Backend Definitions\n *\n * Request expectations provide a way to make assertions about requests made by the application and\n * to define responses for those requests. The test will fail if the expected requests are not made\n * or they are made in the wrong order.\n *\n * Backend definitions allow you to define a fake backend for your application which doesn't assert\n * if a particular request was made or not, it just returns a trained response if a request is made.\n * The test will pass whether or not the request gets made during testing.\n *\n *\n * <table class=\"table\">\n *   <tr><th width=\"220px\"></th><th>Request expectations</th><th>Backend definitions</th></tr>\n *   <tr>\n *     <th>Syntax</th>\n *     <td>.expect(...).respond(...)</td>\n *     <td>.when(...).respond(...)</td>\n *   </tr>\n *   <tr>\n *     <th>Typical usage</th>\n *     <td>strict unit tests</td>\n *     <td>loose (black-box) unit testing</td>\n *   </tr>\n *   <tr>\n *     <th>Fulfills multiple requests</th>\n *     <td>NO</td>\n *     <td>YES</td>\n *   </tr>\n *   <tr>\n *     <th>Order of requests matters</th>\n *     <td>YES</td>\n *     <td>NO</td>\n *   </tr>\n *   <tr>\n *     <th>Request required</th>\n *     <td>YES</td>\n *     <td>NO</td>\n *   </tr>\n *   <tr>\n *     <th>Response required</th>\n *     <td>optional (see below)</td>\n *     <td>YES</td>\n *   </tr>\n * </table>\n *\n * In cases where both backend definitions and request expectations are specified during unit\n * testing, the request expectations are evaluated first.\n *\n * If a request expectation has no response specified, the algorithm will search your backend\n * definitions for an appropriate response.\n *\n * If a request didn't match any expectation or if the expectation doesn't have the response\n * defined, the backend definitions are evaluated in sequential order to see if any of them match\n * the request. The response from the first matched definition is returned.\n *\n *\n * ## Flushing HTTP requests\n *\n * The $httpBackend used in production always responds to requests asynchronously. If we preserved\n * this behavior in unit testing, we'd have to create async unit tests, which are hard to write,\n * to follow and to maintain. But neither can the testing mock respond synchronously; that would\n * change the execution of the code under test. For this reason, the mock $httpBackend has a\n * `flush()` method, which allows the test to explicitly flush pending requests. This preserves\n * the async api of the backend, while allowing the test to execute synchronously.\n *\n *\n * ## Unit testing with mock $httpBackend\n * The following code shows how to setup and use the mock backend when unit testing a controller.\n * First we create the controller under test:\n *\n  ```js\n  // The module code\n  angular\n    .module('MyApp', [])\n    .controller('MyController', MyController);\n\n  // The controller code\n  function MyController($scope, $http) {\n    var authToken;\n\n    $http.get('/auth.py').then(function(response) {\n      authToken = response.headers('A-Token');\n      $scope.user = response.data;\n    });\n\n    $scope.saveMessage = function(message) {\n      var headers = { 'Authorization': authToken };\n      $scope.status = 'Saving...';\n\n      $http.post('/add-msg.py', message, { headers: headers } ).then(function(response) {\n        $scope.status = '';\n      }).catch(function() {\n        $scope.status = 'Failed...';\n      });\n    };\n  }\n  ```\n *\n * Now we setup the mock backend and create the test specs:\n *\n  ```js\n    // testing controller\n    describe('MyController', function() {\n       var $httpBackend, $rootScope, createController, authRequestHandler;\n\n       // Set up the module\n       beforeEach(module('MyApp'));\n\n       beforeEach(inject(function($injector) {\n         // Set up the mock http service responses\n         $httpBackend = $injector.get('$httpBackend');\n         // backend definition common for all tests\n         authRequestHandler = $httpBackend.when('GET', '/auth.py')\n                                .respond({userId: 'userX'}, {'A-Token': 'xxx'});\n\n         // Get hold of a scope (i.e. the root scope)\n         $rootScope = $injector.get('$rootScope');\n         // The $controller service is used to create instances of controllers\n         var $controller = $injector.get('$controller');\n\n         createController = function() {\n           return $controller('MyController', {'$scope' : $rootScope });\n         };\n       }));\n\n\n       afterEach(function() {\n         $httpBackend.verifyNoOutstandingExpectation();\n         $httpBackend.verifyNoOutstandingRequest();\n       });\n\n\n       it('should fetch authentication token', function() {\n         $httpBackend.expectGET('/auth.py');\n         var controller = createController();\n         $httpBackend.flush();\n       });\n\n\n       it('should fail authentication', function() {\n\n         // Notice how you can change the response even after it was set\n         authRequestHandler.respond(401, '');\n\n         $httpBackend.expectGET('/auth.py');\n         var controller = createController();\n         $httpBackend.flush();\n         expect($rootScope.status).toBe('Failed...');\n       });\n\n\n       it('should send msg to server', function() {\n         var controller = createController();\n         $httpBackend.flush();\n\n         // now you don’t care about the authentication, but\n         // the controller will still send the request and\n         // $httpBackend will respond without you having to\n         // specify the expectation and response for this request\n\n         $httpBackend.expectPOST('/add-msg.py', 'message content').respond(201, '');\n         $rootScope.saveMessage('message content');\n         expect($rootScope.status).toBe('Saving...');\n         $httpBackend.flush();\n         expect($rootScope.status).toBe('');\n       });\n\n\n       it('should send auth header', function() {\n         var controller = createController();\n         $httpBackend.flush();\n\n         $httpBackend.expectPOST('/add-msg.py', undefined, function(headers) {\n           // check if the header was sent, if it wasn't the expectation won't\n           // match the request and the test will fail\n           return headers['Authorization'] === 'xxx';\n         }).respond(201, '');\n\n         $rootScope.saveMessage('whatever');\n         $httpBackend.flush();\n       });\n    });\n  ```\n *\n * ## Dynamic responses\n *\n * You define a response to a request by chaining a call to `respond()` onto a definition or expectation.\n * If you provide a **callback** as the first parameter to `respond(callback)` then you can dynamically generate\n * a response based on the properties of the request.\n *\n * The `callback` function should be of the form `function(method, url, data, headers, params)`.\n *\n * ### Query parameters\n *\n * By default, query parameters on request URLs are parsed into the `params` object. So a request URL\n * of `/list?q=searchstr&orderby=-name` would set `params` to be `{q: 'searchstr', orderby: '-name'}`.\n *\n * ### Regex parameter matching\n *\n * If an expectation or definition uses a **regex** to match the URL, you can provide an array of **keys** via a\n * `params` argument. The index of each **key** in the array will match the index of a **group** in the\n * **regex**.\n *\n * The `params` object in the **callback** will now have properties with these keys, which hold the value of the\n * corresponding **group** in the **regex**.\n *\n * This also applies to the `when` and `expect` shortcut methods.\n *\n *\n * ```js\n *   $httpBackend.expect('GET', /\\/user\\/(.+)/, undefined, undefined, ['id'])\n *     .respond(function(method, url, data, headers, params) {\n *       // for requested url of '/user/1234' params is {id: '1234'}\n *     });\n *\n *   $httpBackend.whenPATCH(/\\/user\\/(.+)\\/article\\/(.+)/, undefined, undefined, ['user', 'article'])\n *     .respond(function(method, url, data, headers, params) {\n *       // for url of '/user/1234/article/567' params is {user: '1234', article: '567'}\n *     });\n * ```\n *\n * ## Matching route requests\n *\n * For extra convenience, `whenRoute` and `expectRoute` shortcuts are available. These methods offer colon\n * delimited matching of the url path, ignoring the query string. This allows declarations\n * similar to how application routes are configured with `$routeProvider`. Because these methods convert\n * the definition url to regex, declaration order is important. Combined with query parameter parsing,\n * the following is possible:\n *\n  ```js\n    $httpBackend.whenRoute('GET', '/users/:id')\n      .respond(function(method, url, data, headers, params) {\n        return [200, MockUserList[Number(params.id)]];\n      });\n\n    $httpBackend.whenRoute('GET', '/users')\n      .respond(function(method, url, data, headers, params) {\n        var userList = angular.copy(MockUserList),\n          defaultSort = 'lastName',\n          count, pages, isPrevious, isNext;\n\n        // paged api response '/v1/users?page=2'\n        params.page = Number(params.page) || 1;\n\n        // query for last names '/v1/users?q=Archer'\n        if (params.q) {\n          userList = $filter('filter')({lastName: params.q});\n        }\n\n        pages = Math.ceil(userList.length / pagingLength);\n        isPrevious = params.page > 1;\n        isNext = params.page < pages;\n\n        return [200, {\n          count:    userList.length,\n          previous: isPrevious,\n          next:     isNext,\n          // sort field -> '/v1/users?sortBy=firstName'\n          results:  $filter('orderBy')(userList, params.sortBy || defaultSort)\n                      .splice((params.page - 1) * pagingLength, pagingLength)\n        }];\n      });\n  ```\n */\nangular.mock.$httpBackendDecorator =\n  ['$rootScope', '$timeout', '$delegate', createHttpBackendMock];\n\n/**\n * General factory function for $httpBackend mock.\n * Returns instance for unit testing (when no arguments specified):\n *   - passing through is disabled\n *   - auto flushing is disabled\n *\n * Returns instance for e2e testing (when `$delegate` and `$browser` specified):\n *   - passing through (delegating request to real backend) is enabled\n *   - auto flushing is enabled\n *\n * @param {Object=} $delegate Real $httpBackend instance (allow passing through if specified)\n * @param {Object=} $browser Auto-flushing enabled if specified\n * @return {Object} Instance of $httpBackend mock\n */\nfunction createHttpBackendMock($rootScope, $timeout, $delegate, $browser) {\n  var definitions = [],\n      expectations = [],\n      responses = [],\n      responsesPush = angular.bind(responses, responses.push),\n      copy = angular.copy,\n      // We cache the original backend so that if both ngMock and ngMockE2E override the\n      // service the ngMockE2E version can pass through to the real backend\n      originalHttpBackend = $delegate.$$originalHttpBackend || $delegate;\n\n  function createResponse(status, data, headers, statusText) {\n    if (angular.isFunction(status)) return status;\n\n    return function() {\n      return angular.isNumber(status)\n          ? [status, data, headers, statusText]\n          : [200, status, data, headers];\n    };\n  }\n\n  // TODO(vojta): change params to: method, url, data, headers, callback\n  function $httpBackend(method, url, data, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers) {\n\n    var xhr = new MockXhr(),\n        expectation = expectations[0],\n        wasExpected = false;\n\n    xhr.$$events = eventHandlers;\n    xhr.upload.$$events = uploadEventHandlers;\n\n    function prettyPrint(data) {\n      return (angular.isString(data) || angular.isFunction(data) || data instanceof RegExp)\n          ? data\n          : angular.toJson(data);\n    }\n\n    function wrapResponse(wrapped) {\n      if (!$browser && timeout) {\n        if (timeout.then) {\n          timeout.then(handleTimeout);\n        } else {\n          $timeout(handleTimeout, timeout);\n        }\n      }\n\n      return handleResponse;\n\n      function handleResponse() {\n        var response = wrapped.response(method, url, data, headers, wrapped.params(url));\n        xhr.$$respHeaders = response[2];\n        callback(copy(response[0]), copy(response[1]), xhr.getAllResponseHeaders(),\n                 copy(response[3] || ''));\n      }\n\n      function handleTimeout() {\n        for (var i = 0, ii = responses.length; i < ii; i++) {\n          if (responses[i] === handleResponse) {\n            responses.splice(i, 1);\n            callback(-1, undefined, '');\n            break;\n          }\n        }\n      }\n    }\n\n    if (expectation && expectation.match(method, url)) {\n      if (!expectation.matchData(data)) {\n        throw new Error('Expected ' + expectation + ' with different data\\n' +\n            'EXPECTED: ' + prettyPrint(expectation.data) + '\\nGOT:      ' + data);\n      }\n\n      if (!expectation.matchHeaders(headers)) {\n        throw new Error('Expected ' + expectation + ' with different headers\\n' +\n                        'EXPECTED: ' + prettyPrint(expectation.headers) + '\\nGOT:      ' +\n                        prettyPrint(headers));\n      }\n\n      expectations.shift();\n\n      if (expectation.response) {\n        responses.push(wrapResponse(expectation));\n        return;\n      }\n      wasExpected = true;\n    }\n\n    var i = -1, definition;\n    while ((definition = definitions[++i])) {\n      if (definition.match(method, url, data, headers || {})) {\n        if (definition.response) {\n          // if $browser specified, we do auto flush all requests\n          ($browser ? $browser.defer : responsesPush)(wrapResponse(definition));\n        } else if (definition.passThrough) {\n          originalHttpBackend(method, url, data, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers);\n        } else throw new Error('No response defined !');\n        return;\n      }\n    }\n    throw wasExpected ?\n        new Error('No response defined !') :\n        new Error('Unexpected request: ' + method + ' ' + url + '\\n' +\n                  (expectation ? 'Expected ' + expectation : 'No more request expected'));\n  }\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#when\n   * @description\n   * Creates a new backend definition.\n   *\n   * @param {string} method HTTP method.\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n   *   data string and returns true if the data is as expected.\n   * @param {(Object|function(Object))=} headers HTTP headers or function that receives http header\n   *   object and returns true if the headers match the current definition.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   *\n   *  - respond –\n   *      ```js\n   *      {function([status,] data[, headers, statusText])\n   *      | function(function(method, url, data, headers, params)}\n   *      ```\n   *    – The respond method takes a set of static data to be returned or a function that can\n   *    return an array containing response status (number), response data (Array|Object|string),\n   *    response headers (Object), and the text for the status (string). The respond method returns\n   *    the `requestHandler` object for possible overrides.\n   */\n  $httpBackend.when = function(method, url, data, headers, keys) {\n\n    assertArgDefined(arguments, 1, 'url');\n\n    var definition = new MockHttpExpectation(method, url, data, headers, keys),\n        chain = {\n          respond: function(status, data, headers, statusText) {\n            definition.passThrough = undefined;\n            definition.response = createResponse(status, data, headers, statusText);\n            return chain;\n          }\n        };\n\n    if ($browser) {\n      chain.passThrough = function() {\n        definition.response = undefined;\n        definition.passThrough = true;\n        return chain;\n      };\n    }\n\n    definitions.push(definition);\n    return chain;\n  };\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenGET\n   * @description\n   * Creates a new backend definition for GET requests. For more info see `when()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(Object|function(Object))=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenHEAD\n   * @description\n   * Creates a new backend definition for HEAD requests. For more info see `when()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(Object|function(Object))=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenDELETE\n   * @description\n   * Creates a new backend definition for DELETE requests. For more info see `when()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(Object|function(Object))=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenPOST\n   * @description\n   * Creates a new backend definition for POST requests. For more info see `when()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n   *   data string and returns true if the data is as expected.\n   * @param {(Object|function(Object))=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenPUT\n   * @description\n   * Creates a new backend definition for PUT requests.  For more info see `when()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n   *   data string and returns true if the data is as expected.\n   * @param {(Object|function(Object))=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenJSONP\n   * @description\n   * Creates a new backend definition for JSONP requests. For more info see `when()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled.\n   */\n  createShortMethods('when');\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#whenRoute\n   * @description\n   * Creates a new backend definition that compares only with the requested route.\n   *\n   * @param {string} method HTTP method.\n   * @param {string} url HTTP url string that supports colon param matching.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled. See #when for more info.\n   */\n  $httpBackend.whenRoute = function(method, url) {\n    var pathObj = parseRoute(url);\n    return $httpBackend.when(method, pathObj.regexp, undefined, undefined, pathObj.keys);\n  };\n\n  function parseRoute(url) {\n    var ret = {\n      regexp: url\n    },\n    keys = ret.keys = [];\n\n    if (!url || !angular.isString(url)) return ret;\n\n    url = url\n      .replace(/([().])/g, '\\\\$1')\n      .replace(/(\\/)?:(\\w+)([?*])?/g, function(_, slash, key, option) {\n        var optional = option === '?' ? option : null;\n        var star = option === '*' ? option : null;\n        keys.push({ name: key, optional: !!optional });\n        slash = slash || '';\n        return ''\n          + (optional ? '' : slash)\n          + '(?:'\n          + (optional ? slash : '')\n          + (star && '(.+?)' || '([^/]+)')\n          + (optional || '')\n          + ')'\n          + (optional || '');\n      })\n      .replace(/([/$*])/g, '\\\\$1');\n\n    ret.regexp = new RegExp('^' + url, 'i');\n    return ret;\n  }\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expect\n   * @description\n   * Creates a new request expectation.\n   *\n   * @param {string} method HTTP method.\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that\n   *  receives data string and returns true if the data is as expected, or Object if request body\n   *  is in JSON format.\n   * @param {(Object|function(Object))=} headers HTTP headers or function that receives http header\n   *   object and returns true if the headers match the current expectation.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *  request is handled. You can save this object for later use and invoke `respond` again in\n   *  order to change how a matched request is handled.\n   *\n   *  - respond –\n   *    ```\n   *    { function([status,] data[, headers, statusText])\n   *    | function(function(method, url, data, headers, params)}\n   *    ```\n   *    – The respond method takes a set of static data to be returned or a function that can\n   *    return an array containing response status (number), response data (Array|Object|string),\n   *    response headers (Object), and the text for the status (string). The respond method returns\n   *    the `requestHandler` object for possible overrides.\n   */\n  $httpBackend.expect = function(method, url, data, headers, keys) {\n\n    assertArgDefined(arguments, 1, 'url');\n\n    var expectation = new MockHttpExpectation(method, url, data, headers, keys),\n        chain = {\n          respond: function(status, data, headers, statusText) {\n            expectation.response = createResponse(status, data, headers, statusText);\n            return chain;\n          }\n        };\n\n    expectations.push(expectation);\n    return chain;\n  };\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectGET\n   * @description\n   * Creates a new request expectation for GET requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {Object=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled. See #expect for more info.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectHEAD\n   * @description\n   * Creates a new request expectation for HEAD requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {Object=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectDELETE\n   * @description\n   * Creates a new request expectation for DELETE requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {Object=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectPOST\n   * @description\n   * Creates a new request expectation for POST requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that\n   *  receives data string and returns true if the data is as expected, or Object if request body\n   *  is in JSON format.\n   * @param {Object=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectPUT\n   * @description\n   * Creates a new request expectation for PUT requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that\n   *  receives data string and returns true if the data is as expected, or Object if request body\n   *  is in JSON format.\n   * @param {Object=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectPATCH\n   * @description\n   * Creates a new request expectation for PATCH requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n   *   and returns true if the url matches the current definition.\n   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that\n   *  receives data string and returns true if the data is as expected, or Object if request body\n   *  is in JSON format.\n   * @param {Object=} headers HTTP headers.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   */\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectJSONP\n   * @description\n   * Creates a new request expectation for JSONP requests. For more info see `expect()`.\n   *\n   * @param {string|RegExp|function(string)=} url HTTP url or function that receives an url\n   *   and returns true if the url matches the current definition.\n   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   *   request is handled. You can save this object for later use and invoke `respond` again in\n   *   order to change how a matched request is handled.\n   */\n  createShortMethods('expect');\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#expectRoute\n   * @description\n   * Creates a new request expectation that compares only with the requested route.\n   *\n   * @param {string} method HTTP method.\n   * @param {string} url HTTP url string that supports colon param matching.\n   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched\n   * request is handled. You can save this object for later use and invoke `respond` again in\n   * order to change how a matched request is handled. See #expect for more info.\n   */\n  $httpBackend.expectRoute = function(method, url) {\n    var pathObj = parseRoute(url);\n    return $httpBackend.expect(method, pathObj.regexp, undefined, undefined, pathObj.keys);\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#flush\n   * @description\n   * Flushes pending requests using the trained responses. Requests are flushed in the order they\n   * were made, but it is also possible to skip one or more requests (for example to have them\n   * flushed later). This is useful for simulating scenarios where responses arrive from the server\n   * in any order.\n   *\n   * If there are no pending requests to flush when the method is called, an exception is thrown (as\n   * this is typically a sign of programming error).\n   *\n   * @param {number=} count - Number of responses to flush. If undefined/null, all pending requests\n   *     (starting after `skip`) will be flushed.\n   * @param {number=} [skip=0] - Number of pending requests to skip. For example, a value of `5`\n   *     would skip the first 5 pending requests and start flushing from the 6th onwards.\n   */\n  $httpBackend.flush = function(count, skip, digest) {\n    if (digest !== false) $rootScope.$digest();\n\n    skip = skip || 0;\n    if (skip >= responses.length) throw new Error('No pending request to flush !');\n\n    if (angular.isDefined(count) && count !== null) {\n      while (count--) {\n        var part = responses.splice(skip, 1);\n        if (!part.length) throw new Error('No more pending request to flush !');\n        part[0]();\n      }\n    } else {\n      while (responses.length > skip) {\n        responses.splice(skip, 1)[0]();\n      }\n    }\n    $httpBackend.verifyNoOutstandingExpectation(digest);\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#verifyNoOutstandingExpectation\n   * @description\n   * Verifies that all of the requests defined via the `expect` api were made. If any of the\n   * requests were not made, verifyNoOutstandingExpectation throws an exception.\n   *\n   * Typically, you would call this method following each test case that asserts requests using an\n   * \"afterEach\" clause.\n   *\n   * ```js\n   *   afterEach($httpBackend.verifyNoOutstandingExpectation);\n   * ```\n   */\n  $httpBackend.verifyNoOutstandingExpectation = function(digest) {\n    if (digest !== false) $rootScope.$digest();\n    if (expectations.length) {\n      throw new Error('Unsatisfied requests: ' + expectations.join(', '));\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#verifyNoOutstandingRequest\n   * @description\n   * Verifies that there are no outstanding requests that need to be flushed.\n   *\n   * Typically, you would call this method following each test case that asserts requests using an\n   * \"afterEach\" clause.\n   *\n   * ```js\n   *   afterEach($httpBackend.verifyNoOutstandingRequest);\n   * ```\n   */\n  $httpBackend.verifyNoOutstandingRequest = function(digest) {\n    if (digest !== false) $rootScope.$digest();\n    if (responses.length) {\n      throw new Error('Unflushed requests: ' + responses.length);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $httpBackend#resetExpectations\n   * @description\n   * Resets all request expectations, but preserves all backend definitions. Typically, you would\n   * call resetExpectations during a multiple-phase test when you want to reuse the same instance of\n   * $httpBackend mock.\n   */\n  $httpBackend.resetExpectations = function() {\n    expectations.length = 0;\n    responses.length = 0;\n  };\n\n  $httpBackend.$$originalHttpBackend = originalHttpBackend;\n\n  return $httpBackend;\n\n\n  function createShortMethods(prefix) {\n    angular.forEach(['GET', 'DELETE', 'JSONP', 'HEAD'], function(method) {\n     $httpBackend[prefix + method] = function(url, headers, keys) {\n        assertArgDefined(arguments, 0, 'url');\n\n        // Change url to `null` if `undefined` to stop it throwing an exception further down\n        if (angular.isUndefined(url)) url = null;\n\n       return $httpBackend[prefix](method, url, undefined, headers, keys);\n     };\n    });\n\n    angular.forEach(['PUT', 'POST', 'PATCH'], function(method) {\n      $httpBackend[prefix + method] = function(url, data, headers, keys) {\n        assertArgDefined(arguments, 0, 'url');\n\n        // Change url to `null` if `undefined` to stop it throwing an exception further down\n        if (angular.isUndefined(url)) url = null;\n\n        return $httpBackend[prefix](method, url, data, headers, keys);\n      };\n    });\n  }\n}\n\nfunction assertArgDefined(args, index, name) {\n  if (args.length > index && angular.isUndefined(args[index])) {\n    throw new Error('Undefined argument `' + name + '`; the argument is provided but not defined');\n  }\n}\n\n\nfunction MockHttpExpectation(method, url, data, headers, keys) {\n\n  function getUrlParams(u) {\n    var params = u.slice(u.indexOf('?') + 1).split('&');\n    return params.sort();\n  }\n\n  function compareUrl(u) {\n    return (url.slice(0, url.indexOf('?')) === u.slice(0, u.indexOf('?')) &&\n      getUrlParams(url).join() === getUrlParams(u).join());\n  }\n\n  this.data = data;\n  this.headers = headers;\n\n  this.match = function(m, u, d, h) {\n    if (method !== m) return false;\n    if (!this.matchUrl(u)) return false;\n    if (angular.isDefined(d) && !this.matchData(d)) return false;\n    if (angular.isDefined(h) && !this.matchHeaders(h)) return false;\n    return true;\n  };\n\n  this.matchUrl = function(u) {\n    if (!url) return true;\n    if (angular.isFunction(url.test)) return url.test(u);\n    if (angular.isFunction(url)) return url(u);\n    return (url === u || compareUrl(u));\n  };\n\n  this.matchHeaders = function(h) {\n    if (angular.isUndefined(headers)) return true;\n    if (angular.isFunction(headers)) return headers(h);\n    return angular.equals(headers, h);\n  };\n\n  this.matchData = function(d) {\n    if (angular.isUndefined(data)) return true;\n    if (data && angular.isFunction(data.test)) return data.test(d);\n    if (data && angular.isFunction(data)) return data(d);\n    if (data && !angular.isString(data)) {\n      return angular.equals(angular.fromJson(angular.toJson(data)), angular.fromJson(d));\n    }\n    // eslint-disable-next-line eqeqeq\n    return data == d;\n  };\n\n  this.toString = function() {\n    return method + ' ' + url;\n  };\n\n  this.params = function(u) {\n    return angular.extend(parseQuery(), pathParams());\n\n    function pathParams() {\n      var keyObj = {};\n      if (!url || !angular.isFunction(url.test) || !keys || keys.length === 0) return keyObj;\n\n      var m = url.exec(u);\n      if (!m) return keyObj;\n      for (var i = 1, len = m.length; i < len; ++i) {\n        var key = keys[i - 1];\n        var val = m[i];\n        if (key && val) {\n          keyObj[key.name || key] = val;\n        }\n      }\n\n      return keyObj;\n    }\n\n    function parseQuery() {\n      var obj = {}, key_value, key,\n          queryStr = u.indexOf('?') > -1\n          ? u.substring(u.indexOf('?') + 1)\n          : '';\n\n      angular.forEach(queryStr.split('&'), function(keyValue) {\n        if (keyValue) {\n          key_value = keyValue.replace(/\\+/g,'%20').split('=');\n          key = tryDecodeURIComponent(key_value[0]);\n          if (angular.isDefined(key)) {\n            var val = angular.isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;\n            if (!hasOwnProperty.call(obj, key)) {\n              obj[key] = val;\n            } else if (angular.isArray(obj[key])) {\n              obj[key].push(val);\n            } else {\n              obj[key] = [obj[key],val];\n            }\n          }\n        }\n      });\n      return obj;\n    }\n    function tryDecodeURIComponent(value) {\n      try {\n        return decodeURIComponent(value);\n      } catch (e) {\n        // Ignore any invalid uri component\n      }\n    }\n  };\n}\n\nfunction createMockXhr() {\n  return new MockXhr();\n}\n\nfunction MockXhr() {\n\n  // hack for testing $http, $httpBackend\n  MockXhr.$$lastInstance = this;\n\n  this.open = function(method, url, async) {\n    this.$$method = method;\n    this.$$url = url;\n    this.$$async = async;\n    this.$$reqHeaders = {};\n    this.$$respHeaders = {};\n  };\n\n  this.send = function(data) {\n    this.$$data = data;\n  };\n\n  this.setRequestHeader = function(key, value) {\n    this.$$reqHeaders[key] = value;\n  };\n\n  this.getResponseHeader = function(name) {\n    // the lookup must be case insensitive,\n    // that's why we try two quick lookups first and full scan last\n    var header = this.$$respHeaders[name];\n    if (header) return header;\n\n    name = angular.lowercase(name);\n    header = this.$$respHeaders[name];\n    if (header) return header;\n\n    header = undefined;\n    angular.forEach(this.$$respHeaders, function(headerVal, headerName) {\n      if (!header && angular.lowercase(headerName) === name) header = headerVal;\n    });\n    return header;\n  };\n\n  this.getAllResponseHeaders = function() {\n    var lines = [];\n\n    angular.forEach(this.$$respHeaders, function(value, key) {\n      lines.push(key + ': ' + value);\n    });\n    return lines.join('\\n');\n  };\n\n  this.abort = angular.noop;\n\n  // This section simulates the events on a real XHR object (and the upload object)\n  // When we are testing $httpBackend (inside the angular project) we make partial use of this\n  // but store the events directly ourselves on `$$events`, instead of going through the `addEventListener`\n  this.$$events = {};\n  this.addEventListener = function(name, listener) {\n    if (angular.isUndefined(this.$$events[name])) this.$$events[name] = [];\n    this.$$events[name].push(listener);\n  };\n\n  this.upload = {\n    $$events: {},\n    addEventListener: this.addEventListener\n  };\n}\n\n\n/**\n * @ngdoc service\n * @name $timeout\n * @description\n *\n * This service is just a simple decorator for {@link ng.$timeout $timeout} service\n * that adds a \"flush\" and \"verifyNoPendingTasks\" methods.\n */\n\nangular.mock.$TimeoutDecorator = ['$delegate', '$browser', function($delegate, $browser) {\n\n  /**\n   * @ngdoc method\n   * @name $timeout#flush\n   * @description\n   *\n   * Flushes the queue of pending tasks.\n   *\n   * @param {number=} delay maximum timeout amount to flush up until\n   */\n  $delegate.flush = function(delay) {\n    $browser.defer.flush(delay);\n  };\n\n  /**\n   * @ngdoc method\n   * @name $timeout#verifyNoPendingTasks\n   * @description\n   *\n   * Verifies that there are no pending tasks that need to be flushed.\n   */\n  $delegate.verifyNoPendingTasks = function() {\n    if ($browser.deferredFns.length) {\n      throw new Error('Deferred tasks to flush (' + $browser.deferredFns.length + '): ' +\n          formatPendingTasksAsString($browser.deferredFns));\n    }\n  };\n\n  function formatPendingTasksAsString(tasks) {\n    var result = [];\n    angular.forEach(tasks, function(task) {\n      result.push('{id: ' + task.id + ', time: ' + task.time + '}');\n    });\n\n    return result.join(', ');\n  }\n\n  return $delegate;\n}];\n\nangular.mock.$RAFDecorator = ['$delegate', function($delegate) {\n  var rafFn = function(fn) {\n    var index = rafFn.queue.length;\n    rafFn.queue.push(fn);\n    return function() {\n      rafFn.queue.splice(index, 1);\n    };\n  };\n\n  rafFn.queue = [];\n  rafFn.supported = $delegate.supported;\n\n  rafFn.flush = function() {\n    if (rafFn.queue.length === 0) {\n      throw new Error('No rAF callbacks present');\n    }\n\n    var length = rafFn.queue.length;\n    for (var i = 0; i < length; i++) {\n      rafFn.queue[i]();\n    }\n\n    rafFn.queue = rafFn.queue.slice(i);\n  };\n\n  return rafFn;\n}];\n\n/**\n *\n */\nvar originalRootElement;\nangular.mock.$RootElementProvider = function() {\n  this.$get = ['$injector', function($injector) {\n    originalRootElement = angular.element('<div ng-app></div>').data('$injector', $injector);\n    return originalRootElement;\n  }];\n};\n\n/**\n * @ngdoc service\n * @name $controller\n * @description\n * A decorator for {@link ng.$controller} with additional `bindings` parameter, useful when testing\n * controllers of directives that use {@link $compile#-bindtocontroller- `bindToController`}.\n *\n * Depending on the value of\n * {@link ng.$compileProvider#preAssignBindingsEnabled `preAssignBindingsEnabled()`}, the properties\n * will be bound before or after invoking the constructor.\n *\n *\n * ## Example\n *\n * ```js\n *\n * // Directive definition ...\n *\n * myMod.directive('myDirective', {\n *   controller: 'MyDirectiveController',\n *   bindToController: {\n *     name: '@'\n *   }\n * });\n *\n *\n * // Controller definition ...\n *\n * myMod.controller('MyDirectiveController', ['$log', function($log) {\n *   this.log = function() {\n *     $log.info(this.name);\n *   };\n * }]);\n *\n *\n * // In a test ...\n *\n * describe('myDirectiveController', function() {\n *   describe('log()', function() {\n *     it('should write the bound name to the log', inject(function($controller, $log) {\n *       var ctrl = $controller('MyDirectiveController', { /* no locals &#42;/ }, { name: 'Clark Kent' });\n *       ctrl.log();\n *\n *       expect(ctrl.name).toEqual('Clark Kent');\n *       expect($log.info.logs).toEqual(['Clark Kent']);\n *     }));\n *   });\n * });\n *\n * ```\n *\n * @param {Function|string} constructor If called with a function then it's considered to be the\n *    controller constructor function. Otherwise it's considered to be a string which is used\n *    to retrieve the controller constructor using the following steps:\n *\n *    * check if a controller with given name is registered via `$controllerProvider`\n *    * check if evaluating the string on the current scope returns a constructor\n *    * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n *      `window` object (deprecated, not recommended)\n *\n *    The string can use the `controller as property` syntax, where the controller instance is published\n *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n *    to work correctly.\n *\n * @param {Object} locals Injection locals for Controller.\n * @param {Object=} bindings Properties to add to the controller instance. This is used to simulate\n *                           the `bindToController` feature and simplify certain kinds of tests.\n * @return {Object} Instance of given controller.\n */\nfunction createControllerDecorator(compileProvider) {\n  angular.mock.$ControllerDecorator = ['$delegate', function($delegate) {\n    return function(expression, locals, later, ident) {\n      if (later && typeof later === 'object') {\n        var preAssignBindingsEnabled = compileProvider.preAssignBindingsEnabled();\n\n        var instantiate = $delegate(expression, locals, true, ident);\n        if (preAssignBindingsEnabled) {\n          angular.extend(instantiate.instance, later);\n        }\n\n        var instance = instantiate();\n        if (!preAssignBindingsEnabled || instance !== instantiate.instance) {\n          angular.extend(instance, later);\n        }\n\n        return instance;\n      }\n      return $delegate(expression, locals, later, ident);\n    };\n  }];\n\n  return angular.mock.$ControllerDecorator;\n}\n\n/**\n * @ngdoc service\n * @name $componentController\n * @description\n * A service that can be used to create instances of component controllers. Useful for unit-testing.\n *\n * Be aware that the controller will be instantiated and attached to the scope as specified in\n * the component definition object. If you do not provide a `$scope` object in the `locals` param\n * then the helper will create a new isolated scope as a child of `$rootScope`.\n *\n * If you are using `$element` or `$attrs` in the controller, make sure to provide them as `locals`.\n * The `$element` must be a jqLite-wrapped DOM element, and `$attrs` should be an object that\n * has all properties / functions that you are using in the controller. If this is getting too complex,\n * you should compile the component instead and access the component's controller via the\n * {@link angular.element#methods `controller`} function.\n *\n * See also the section on {@link guide/component#unit-testing-component-controllers unit-testing component controllers}\n * in the guide.\n *\n * @param {string} componentName the name of the component whose controller we want to instantiate\n * @param {Object} locals Injection locals for Controller.\n * @param {Object=} bindings Properties to add to the controller before invoking the constructor. This is used\n *                           to simulate the `bindToController` feature and simplify certain kinds of tests.\n * @param {string=} ident Override the property name to use when attaching the controller to the scope.\n * @return {Object} Instance of requested controller.\n */\nangular.mock.$ComponentControllerProvider = ['$compileProvider',\n    function ComponentControllerProvider($compileProvider) {\n  this.$get = ['$controller','$injector', '$rootScope', function($controller, $injector, $rootScope) {\n    return function $componentController(componentName, locals, bindings, ident) {\n      // get all directives associated to the component name\n      var directives = $injector.get(componentName + 'Directive');\n      // look for those directives that are components\n      var candidateDirectives = directives.filter(function(directiveInfo) {\n        // components have controller, controllerAs and restrict:'E'\n        return directiveInfo.controller && directiveInfo.controllerAs && directiveInfo.restrict === 'E';\n      });\n      // check if valid directives found\n      if (candidateDirectives.length === 0) {\n        throw new Error('No component found');\n      }\n      if (candidateDirectives.length > 1) {\n        throw new Error('Too many components found');\n      }\n      // get the info of the component\n      var directiveInfo = candidateDirectives[0];\n      // create a scope if needed\n      locals = locals || {};\n      locals.$scope = locals.$scope || $rootScope.$new(true);\n      return $controller(directiveInfo.controller, locals, bindings, ident || directiveInfo.controllerAs);\n    };\n  }];\n}];\n\n\n/**\n * @ngdoc module\n * @name ngMock\n * @packageName angular-mocks\n * @description\n *\n * # ngMock\n *\n * The `ngMock` module provides support to inject and mock Angular services into unit tests.\n * In addition, ngMock also extends various core ng services such that they can be\n * inspected and controlled in a synchronous manner within test code.\n *\n *\n * <div doc-module-components=\"ngMock\"></div>\n *\n * @installation\n *\n *  First, download the file:\n *  * [Google CDN](https://developers.google.com/speed/libraries/devguide#angularjs) e.g.\n *    `\"//ajax.googleapis.com/ajax/libs/angularjs/X.Y.Z/angular-mocks.js\"`\n *  * [NPM](https://www.npmjs.com/) e.g. `npm install angular-mocks@X.Y.Z`\n *  * [Yarn](https://yarnpkg.com) e.g. `yarn add angular-mocks@X.Y.Z`\n *  * [Bower](http://bower.io) e.g. `bower install angular-mocks#X.Y.Z`\n *  * [code.angularjs.org](https://code.angularjs.org/) (discouraged for production use)  e.g.\n *    `\"//code.angularjs.org/X.Y.Z/angular-mocks.js\"`\n *\n * where X.Y.Z is the AngularJS version you are running.\n *\n * Then, configure your test runner to load `angular-mocks.js` after `angular.js`.\n * This example uses <a href=\"http://karma-runner.github.io/\">Karma</a>:\n *\n * ```\n * config.set({\n *   files: [\n *     'build/angular.js', // and other module files you need\n *     'build/angular-mocks.js',\n *     '<path/to/application/files>',\n *     '<path/to/spec/files>'\n *   ]\n * });\n * ```\n *\n * Including the `angular-mocks.js` file automatically adds the `ngMock` module, so your tests\n *  are ready to go!\n */\nangular.module('ngMock', ['ng']).provider({\n  $browser: angular.mock.$BrowserProvider,\n  $exceptionHandler: angular.mock.$ExceptionHandlerProvider,\n  $log: angular.mock.$LogProvider,\n  $interval: angular.mock.$IntervalProvider,\n  $rootElement: angular.mock.$RootElementProvider,\n  $componentController: angular.mock.$ComponentControllerProvider\n}).config(['$provide', '$compileProvider', function($provide, $compileProvider) {\n  $provide.decorator('$timeout', angular.mock.$TimeoutDecorator);\n  $provide.decorator('$$rAF', angular.mock.$RAFDecorator);\n  $provide.decorator('$rootScope', angular.mock.$RootScopeDecorator);\n  $provide.decorator('$controller', createControllerDecorator($compileProvider));\n  $provide.decorator('$httpBackend', angular.mock.$httpBackendDecorator);\n}]);\n\n/**\n * @ngdoc module\n * @name ngMockE2E\n * @module ngMockE2E\n * @packageName angular-mocks\n * @description\n *\n * The `ngMockE2E` is an angular module which contains mocks suitable for end-to-end testing.\n * Currently there is only one mock present in this module -\n * the {@link ngMockE2E.$httpBackend e2e $httpBackend} mock.\n */\nangular.module('ngMockE2E', ['ng']).config(['$provide', function($provide) {\n  $provide.decorator('$httpBackend', angular.mock.e2e.$httpBackendDecorator);\n}]);\n\n/**\n * @ngdoc service\n * @name $httpBackend\n * @module ngMockE2E\n * @description\n * Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of\n * applications that use the {@link ng.$http $http service}.\n *\n * <div class=\"alert alert-info\">\n * **Note**: For fake http backend implementation suitable for unit testing please see\n * {@link ngMock.$httpBackend unit-testing $httpBackend mock}.\n * </div>\n *\n * This implementation can be used to respond with static or dynamic responses via the `when` api\n * and its shortcuts (`whenGET`, `whenPOST`, etc) and optionally pass through requests to the\n * real $httpBackend for specific requests (e.g. to interact with certain remote apis or to fetch\n * templates from a webserver).\n *\n * As opposed to unit-testing, in an end-to-end testing scenario or in scenario when an application\n * is being developed with the real backend api replaced with a mock, it is often desirable for\n * certain category of requests to bypass the mock and issue a real http request (e.g. to fetch\n * templates or static files from the webserver). To configure the backend with this behavior\n * use the `passThrough` request handler of `when` instead of `respond`.\n *\n * Additionally, we don't want to manually have to flush mocked out requests like we do during unit\n * testing. For this reason the e2e $httpBackend flushes mocked out requests\n * automatically, closely simulating the behavior of the XMLHttpRequest object.\n *\n * To setup the application to run with this http backend, you have to create a module that depends\n * on the `ngMockE2E` and your application modules and defines the fake backend:\n *\n * ```js\n *   var myAppDev = angular.module('myAppDev', ['myApp', 'ngMockE2E']);\n *   myAppDev.run(function($httpBackend) {\n *     var phones = [{name: 'phone1'}, {name: 'phone2'}];\n *\n *     // returns the current list of phones\n *     $httpBackend.whenGET('/phones').respond(phones);\n *\n *     // adds a new phone to the phones array\n *     $httpBackend.whenPOST('/phones').respond(function(method, url, data) {\n *       var phone = angular.fromJson(data);\n *       phones.push(phone);\n *       return [200, phone, {}];\n *     });\n *     $httpBackend.whenGET(/^\\/templates\\//).passThrough(); // Requests for templates are handled by the real server\n *     //...\n *   });\n * ```\n *\n * Afterwards, bootstrap your app with this new module.\n *\n * ## Example\n * <example name=\"httpbackend-e2e-testing\" module=\"myAppE2E\" deps=\"angular-mocks.js\">\n * <file name=\"app.js\">\n *   var myApp = angular.module('myApp', []);\n *\n *   myApp.controller('MainCtrl', function MainCtrl($http) {\n *     var ctrl = this;\n *\n *     ctrl.phones = [];\n *     ctrl.newPhone = {\n *       name: ''\n *     };\n *\n *     ctrl.getPhones = function() {\n *       $http.get('/phones').then(function(response) {\n *         ctrl.phones = response.data;\n *       });\n *     };\n *\n *     ctrl.addPhone = function(phone) {\n *       $http.post('/phones', phone).then(function() {\n *         ctrl.newPhone = {name: ''};\n *         return ctrl.getPhones();\n *       });\n *     };\n *\n *     ctrl.getPhones();\n *   });\n * </file>\n * <file name=\"e2e.js\">\n *   var myAppDev = angular.module('myAppE2E', ['myApp', 'ngMockE2E']);\n *\n *   myAppDev.run(function($httpBackend) {\n *     var phones = [{name: 'phone1'}, {name: 'phone2'}];\n *\n *     // returns the current list of phones\n *     $httpBackend.whenGET('/phones').respond(phones);\n *\n *     // adds a new phone to the phones array\n *     $httpBackend.whenPOST('/phones').respond(function(method, url, data) {\n *       var phone = angular.fromJson(data);\n *       phones.push(phone);\n *       return [200, phone, {}];\n *     });\n *   });\n * </file>\n * <file name=\"index.html\">\n *   <div ng-controller=\"MainCtrl as $ctrl\">\n *   <form name=\"newPhoneForm\" ng-submit=\"$ctrl.addPhone($ctrl.newPhone)\">\n *     <input type=\"text\" ng-model=\"$ctrl.newPhone.name\">\n *     <input type=\"submit\" value=\"Add Phone\">\n *   </form>\n *   <h1>Phones</h1>\n *   <ul>\n *     <li ng-repeat=\"phone in $ctrl.phones\">{{phone.name}}</li>\n *   </ul>\n *   </div>\n * </file>\n * </example>\n *\n *\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#when\n * @module ngMockE2E\n * @description\n * Creates a new backend definition.\n *\n * @param {string} method HTTP method.\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n *   data string and returns true if the data is as expected.\n * @param {(Object|function(Object))=} headers HTTP headers or function that receives http header\n *   object and returns true if the headers match the current definition.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n *\n *  - respond –\n *    ```\n *    { function([status,] data[, headers, statusText])\n *    | function(function(method, url, data, headers, params)}\n *    ```\n *    – The respond method takes a set of static data to be returned or a function that can return\n *    an array containing response status (number), response data (Array|Object|string), response\n *    headers (Object), and the text for the status (string).\n *  - passThrough – `{function()}` – Any request matching a backend definition with\n *    `passThrough` handler will be passed through to the real backend (an XHR request will be made\n *    to the server.)\n *  - Both methods return the `requestHandler` object for possible overrides.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenGET\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for GET requests. For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(Object|function(Object))=} headers HTTP headers.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenHEAD\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for HEAD requests. For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(Object|function(Object))=} headers HTTP headers.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenDELETE\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for DELETE requests. For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(Object|function(Object))=} headers HTTP headers.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenPOST\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for POST requests. For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n *   data string and returns true if the data is as expected.\n * @param {(Object|function(Object))=} headers HTTP headers.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenPUT\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for PUT requests.  For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n *   data string and returns true if the data is as expected.\n * @param {(Object|function(Object))=} headers HTTP headers.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenPATCH\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for PATCH requests.  For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives\n *   data string and returns true if the data is as expected.\n * @param {(Object|function(Object))=} headers HTTP headers.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n\n/**\n * @ngdoc method\n * @name $httpBackend#whenJSONP\n * @module ngMockE2E\n * @description\n * Creates a new backend definition for JSONP requests. For more info see `when()`.\n *\n * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url\n *   and returns true if the url matches the current definition.\n * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on\n *   {@link ngMock.$httpBackend $httpBackend mock}.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\n/**\n * @ngdoc method\n * @name $httpBackend#whenRoute\n * @module ngMockE2E\n * @description\n * Creates a new backend definition that compares only with the requested route.\n *\n * @param {string} method HTTP method.\n * @param {string} url HTTP url string that supports colon param matching.\n * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that\n *   control how a matched request is handled. You can save this object for later use and invoke\n *   `respond` or `passThrough` again in order to change how a matched request is handled.\n */\nangular.mock.e2e = {};\nangular.mock.e2e.$httpBackendDecorator =\n  ['$rootScope', '$timeout', '$delegate', '$browser', createHttpBackendMock];\n\n\n/**\n * @ngdoc type\n * @name $rootScope.Scope\n * @module ngMock\n * @description\n * {@link ng.$rootScope.Scope Scope} type decorated with helper methods useful for testing. These\n * methods are automatically available on any {@link ng.$rootScope.Scope Scope} instance when\n * `ngMock` module is loaded.\n *\n * In addition to all the regular `Scope` methods, the following helper methods are available:\n */\nangular.mock.$RootScopeDecorator = ['$delegate', function($delegate) {\n\n  var $rootScopePrototype = Object.getPrototypeOf($delegate);\n\n  $rootScopePrototype.$countChildScopes = countChildScopes;\n  $rootScopePrototype.$countWatchers = countWatchers;\n\n  return $delegate;\n\n  // ------------------------------------------------------------------------------------------ //\n\n  /**\n   * @ngdoc method\n   * @name $rootScope.Scope#$countChildScopes\n   * @module ngMock\n   * @this $rootScope.Scope\n   * @description\n   * Counts all the direct and indirect child scopes of the current scope.\n   *\n   * The current scope is excluded from the count. The count includes all isolate child scopes.\n   *\n   * @returns {number} Total number of child scopes.\n   */\n  function countChildScopes() {\n    var count = 0; // exclude the current scope\n    var pendingChildHeads = [this.$$childHead];\n    var currentScope;\n\n    while (pendingChildHeads.length) {\n      currentScope = pendingChildHeads.shift();\n\n      while (currentScope) {\n        count += 1;\n        pendingChildHeads.push(currentScope.$$childHead);\n        currentScope = currentScope.$$nextSibling;\n      }\n    }\n\n    return count;\n  }\n\n\n  /**\n   * @ngdoc method\n   * @name $rootScope.Scope#$countWatchers\n   * @this $rootScope.Scope\n   * @module ngMock\n   * @description\n   * Counts all the watchers of direct and indirect child scopes of the current scope.\n   *\n   * The watchers of the current scope are included in the count and so are all the watchers of\n   * isolate child scopes.\n   *\n   * @returns {number} Total number of watchers.\n   */\n  function countWatchers() {\n    var count = this.$$watchers ? this.$$watchers.length : 0; // include the current scope\n    var pendingChildHeads = [this.$$childHead];\n    var currentScope;\n\n    while (pendingChildHeads.length) {\n      currentScope = pendingChildHeads.shift();\n\n      while (currentScope) {\n        count += currentScope.$$watchers ? currentScope.$$watchers.length : 0;\n        pendingChildHeads.push(currentScope.$$childHead);\n        currentScope = currentScope.$$nextSibling;\n      }\n    }\n\n    return count;\n  }\n}];\n\n\n(function(jasmineOrMocha) {\n\n  if (!jasmineOrMocha) {\n    return;\n  }\n\n  var currentSpec = null,\n      injectorState = new InjectorState(),\n      annotatedFunctions = [],\n      wasInjectorCreated = function() {\n        return !!currentSpec;\n      };\n\n  angular.mock.$$annotate = angular.injector.$$annotate;\n  angular.injector.$$annotate = function(fn) {\n    if (typeof fn === 'function' && !fn.$inject) {\n      annotatedFunctions.push(fn);\n    }\n    return angular.mock.$$annotate.apply(this, arguments);\n  };\n\n  /**\n   * @ngdoc function\n   * @name angular.mock.module\n   * @description\n   *\n   * *NOTE*: This function is also published on window for easy access.<br>\n   * *NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n   *\n   * This function registers a module configuration code. It collects the configuration information\n   * which will be used when the injector is created by {@link angular.mock.inject inject}.\n   *\n   * See {@link angular.mock.inject inject} for usage example\n   *\n   * @param {...(string|Function|Object)} fns any number of modules which are represented as string\n   *        aliases or as anonymous module initialization functions. The modules are used to\n   *        configure the injector. The 'ng' and 'ngMock' modules are automatically loaded. If an\n   *        object literal is passed each key-value pair will be registered on the module via\n   *        {@link auto.$provide $provide}.value, the key being the string name (or token) to associate\n   *        with the value on the injector.\n   */\n  var module = window.module = angular.mock.module = function() {\n    var moduleFns = Array.prototype.slice.call(arguments, 0);\n    return wasInjectorCreated() ? workFn() : workFn;\n    /////////////////////\n    function workFn() {\n      if (currentSpec.$injector) {\n        throw new Error('Injector already created, can not register a module!');\n      } else {\n        var fn, modules = currentSpec.$modules || (currentSpec.$modules = []);\n        angular.forEach(moduleFns, function(module) {\n          if (angular.isObject(module) && !angular.isArray(module)) {\n            fn = ['$provide', function($provide) {\n              angular.forEach(module, function(value, key) {\n                $provide.value(key, value);\n              });\n            }];\n          } else {\n            fn = module;\n          }\n          if (currentSpec.$providerInjector) {\n            currentSpec.$providerInjector.invoke(fn);\n          } else {\n            modules.push(fn);\n          }\n        });\n      }\n    }\n  };\n\n  module.$$beforeAllHook = (window.before || window.beforeAll);\n  module.$$afterAllHook = (window.after || window.afterAll);\n\n  // purely for testing ngMock itself\n  module.$$currentSpec = function(to) {\n    if (arguments.length === 0) return to;\n    currentSpec = to;\n  };\n\n  /**\n   * @ngdoc function\n   * @name angular.mock.module.sharedInjector\n   * @description\n   *\n   * *NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n   *\n   * This function ensures a single injector will be used for all tests in a given describe context.\n   * This contrasts with the default behaviour where a new injector is created per test case.\n   *\n   * Use sharedInjector when you want to take advantage of Jasmine's `beforeAll()`, or mocha's\n   * `before()` methods. Call `module.sharedInjector()` before you setup any other hooks that\n   * will create (i.e call `module()`) or use (i.e call `inject()`) the injector.\n   *\n   * You cannot call `sharedInjector()` from within a context already using `sharedInjector()`.\n   *\n   * ## Example\n   *\n   * Typically beforeAll is used to make many assertions about a single operation. This can\n   * cut down test run-time as the test setup doesn't need to be re-run, and enabling focussed\n   * tests each with a single assertion.\n   *\n   * ```js\n   * describe(\"Deep Thought\", function() {\n   *\n   *   module.sharedInjector();\n   *\n   *   beforeAll(module(\"UltimateQuestion\"));\n   *\n   *   beforeAll(inject(function(DeepThought) {\n   *     expect(DeepThought.answer).toBeUndefined();\n   *     DeepThought.generateAnswer();\n   *   }));\n   *\n   *   it(\"has calculated the answer correctly\", inject(function(DeepThought) {\n   *     // Because of sharedInjector, we have access to the instance of the DeepThought service\n   *     // that was provided to the beforeAll() hook. Therefore we can test the generated answer\n   *     expect(DeepThought.answer).toBe(42);\n   *   }));\n   *\n   *   it(\"has calculated the answer within the expected time\", inject(function(DeepThought) {\n   *     expect(DeepThought.runTimeMillennia).toBeLessThan(8000);\n   *   }));\n   *\n   *   it(\"has double checked the answer\", inject(function(DeepThought) {\n   *     expect(DeepThought.absolutelySureItIsTheRightAnswer).toBe(true);\n   *   }));\n   *\n   * });\n   *\n   * ```\n   */\n  module.sharedInjector = function() {\n    if (!(module.$$beforeAllHook && module.$$afterAllHook)) {\n      throw Error('sharedInjector() cannot be used unless your test runner defines beforeAll/afterAll');\n    }\n\n    var initialized = false;\n\n    module.$$beforeAllHook(/** @this */ function() {\n      if (injectorState.shared) {\n        injectorState.sharedError = Error('sharedInjector() cannot be called inside a context that has already called sharedInjector()');\n        throw injectorState.sharedError;\n      }\n      initialized = true;\n      currentSpec = this;\n      injectorState.shared = true;\n    });\n\n    module.$$afterAllHook(function() {\n      if (initialized) {\n        injectorState = new InjectorState();\n        module.$$cleanup();\n      } else {\n        injectorState.sharedError = null;\n      }\n    });\n  };\n\n  module.$$beforeEach = function() {\n    if (injectorState.shared && currentSpec && currentSpec !== this) {\n      var state = currentSpec;\n      currentSpec = this;\n      angular.forEach(['$injector','$modules','$providerInjector', '$injectorStrict'], function(k) {\n        currentSpec[k] = state[k];\n        state[k] = null;\n      });\n    } else {\n      currentSpec = this;\n      originalRootElement = null;\n      annotatedFunctions = [];\n    }\n  };\n\n  module.$$afterEach = function() {\n    if (injectorState.cleanupAfterEach()) {\n      module.$$cleanup();\n    }\n  };\n\n  module.$$cleanup = function() {\n    var injector = currentSpec.$injector;\n\n    annotatedFunctions.forEach(function(fn) {\n      delete fn.$inject;\n    });\n\n    angular.forEach(currentSpec.$modules, function(module) {\n      if (module && module.$$hashKey) {\n        module.$$hashKey = undefined;\n      }\n    });\n\n    currentSpec.$injector = null;\n    currentSpec.$modules = null;\n    currentSpec.$providerInjector = null;\n    currentSpec = null;\n\n    if (injector) {\n      // Ensure `$rootElement` is instantiated, before checking `originalRootElement`\n      var $rootElement = injector.get('$rootElement');\n      var rootNode = $rootElement && $rootElement[0];\n      var cleanUpNodes = !originalRootElement ? [] : [originalRootElement[0]];\n      if (rootNode && (!originalRootElement || rootNode !== originalRootElement[0])) {\n        cleanUpNodes.push(rootNode);\n      }\n      angular.element.cleanData(cleanUpNodes);\n\n      // Ensure `$destroy()` is available, before calling it\n      // (a mocked `$rootScope` might not implement it (or not even be an object at all))\n      var $rootScope = injector.get('$rootScope');\n      if ($rootScope && $rootScope.$destroy) $rootScope.$destroy();\n    }\n\n    // clean up jquery's fragment cache\n    angular.forEach(angular.element.fragments, function(val, key) {\n      delete angular.element.fragments[key];\n    });\n\n    MockXhr.$$lastInstance = null;\n\n    angular.forEach(angular.callbacks, function(val, key) {\n      delete angular.callbacks[key];\n    });\n    angular.callbacks.$$counter = 0;\n  };\n\n  (window.beforeEach || window.setup)(module.$$beforeEach);\n  (window.afterEach || window.teardown)(module.$$afterEach);\n\n  /**\n   * @ngdoc function\n   * @name angular.mock.inject\n   * @description\n   *\n   * *NOTE*: This function is also published on window for easy access.<br>\n   * *NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n   *\n   * The inject function wraps a function into an injectable function. The inject() creates new\n   * instance of {@link auto.$injector $injector} per test, which is then used for\n   * resolving references.\n   *\n   *\n   * ## Resolving References (Underscore Wrapping)\n   * Often, we would like to inject a reference once, in a `beforeEach()` block and reuse this\n   * in multiple `it()` clauses. To be able to do this we must assign the reference to a variable\n   * that is declared in the scope of the `describe()` block. Since we would, most likely, want\n   * the variable to have the same name of the reference we have a problem, since the parameter\n   * to the `inject()` function would hide the outer variable.\n   *\n   * To help with this, the injected parameters can, optionally, be enclosed with underscores.\n   * These are ignored by the injector when the reference name is resolved.\n   *\n   * For example, the parameter `_myService_` would be resolved as the reference `myService`.\n   * Since it is available in the function body as `_myService_`, we can then assign it to a variable\n   * defined in an outer scope.\n   *\n   * ```\n   * // Defined out reference variable outside\n   * var myService;\n   *\n   * // Wrap the parameter in underscores\n   * beforeEach( inject( function(_myService_){\n   *   myService = _myService_;\n   * }));\n   *\n   * // Use myService in a series of tests.\n   * it('makes use of myService', function() {\n   *   myService.doStuff();\n   * });\n   *\n   * ```\n   *\n   * See also {@link angular.mock.module angular.mock.module}\n   *\n   * ## Example\n   * Example of what a typical jasmine tests looks like with the inject method.\n   * ```js\n   *\n   *   angular.module('myApplicationModule', [])\n   *       .value('mode', 'app')\n   *       .value('version', 'v1.0.1');\n   *\n   *\n   *   describe('MyApp', function() {\n   *\n   *     // You need to load modules that you want to test,\n   *     // it loads only the \"ng\" module by default.\n   *     beforeEach(module('myApplicationModule'));\n   *\n   *\n   *     // inject() is used to inject arguments of all given functions\n   *     it('should provide a version', inject(function(mode, version) {\n   *       expect(version).toEqual('v1.0.1');\n   *       expect(mode).toEqual('app');\n   *     }));\n   *\n   *\n   *     // The inject and module method can also be used inside of the it or beforeEach\n   *     it('should override a version and test the new version is injected', function() {\n   *       // module() takes functions or strings (module aliases)\n   *       module(function($provide) {\n   *         $provide.value('version', 'overridden'); // override version here\n   *       });\n   *\n   *       inject(function(version) {\n   *         expect(version).toEqual('overridden');\n   *       });\n   *     });\n   *   });\n   *\n   * ```\n   *\n   * @param {...Function} fns any number of functions which will be injected using the injector.\n   */\n\n\n\n  var ErrorAddingDeclarationLocationStack = function ErrorAddingDeclarationLocationStack(e, errorForStack) {\n    this.message = e.message;\n    this.name = e.name;\n    if (e.line) this.line = e.line;\n    if (e.sourceId) this.sourceId = e.sourceId;\n    if (e.stack && errorForStack)\n      this.stack = e.stack + '\\n' + errorForStack.stack;\n    if (e.stackArray) this.stackArray = e.stackArray;\n  };\n  ErrorAddingDeclarationLocationStack.prototype = Error.prototype;\n\n  window.inject = angular.mock.inject = function() {\n    var blockFns = Array.prototype.slice.call(arguments, 0);\n    var errorForStack = new Error('Declaration Location');\n    // IE10+ and PhanthomJS do not set stack trace information, until the error is thrown\n    if (!errorForStack.stack) {\n      try {\n        throw errorForStack;\n      } catch (e) { /* empty */ }\n    }\n    return wasInjectorCreated() ? WorkFn.call(currentSpec) : WorkFn;\n    /////////////////////\n    function WorkFn() {\n      var modules = currentSpec.$modules || [];\n      var strictDi = !!currentSpec.$injectorStrict;\n      modules.unshift(['$injector', function($injector) {\n        currentSpec.$providerInjector = $injector;\n      }]);\n      modules.unshift('ngMock');\n      modules.unshift('ng');\n      var injector = currentSpec.$injector;\n      if (!injector) {\n        if (strictDi) {\n          // If strictDi is enabled, annotate the providerInjector blocks\n          angular.forEach(modules, function(moduleFn) {\n            if (typeof moduleFn === 'function') {\n              angular.injector.$$annotate(moduleFn);\n            }\n          });\n        }\n        injector = currentSpec.$injector = angular.injector(modules, strictDi);\n        currentSpec.$injectorStrict = strictDi;\n      }\n      for (var i = 0, ii = blockFns.length; i < ii; i++) {\n        if (currentSpec.$injectorStrict) {\n          // If the injector is strict / strictDi, and the spec wants to inject using automatic\n          // annotation, then annotate the function here.\n          injector.annotate(blockFns[i]);\n        }\n        try {\n          injector.invoke(blockFns[i] || angular.noop, this);\n        } catch (e) {\n          if (e.stack && errorForStack) {\n            throw new ErrorAddingDeclarationLocationStack(e, errorForStack);\n          }\n          throw e;\n        } finally {\n          errorForStack = null;\n        }\n      }\n    }\n  };\n\n\n  angular.mock.inject.strictDi = function(value) {\n    value = arguments.length ? !!value : true;\n    return wasInjectorCreated() ? workFn() : workFn;\n\n    function workFn() {\n      if (value !== currentSpec.$injectorStrict) {\n        if (currentSpec.$injector) {\n          throw new Error('Injector already created, can not modify strict annotations');\n        } else {\n          currentSpec.$injectorStrict = value;\n        }\n      }\n    }\n  };\n\n  function InjectorState() {\n    this.shared = false;\n    this.sharedError = null;\n\n    this.cleanupAfterEach = function() {\n      return !this.shared || this.sharedError;\n    };\n  }\n})(window.jasmine || window.mocha);\n\n'use strict';\n\n(function() {\n  /**\n   * Triggers a browser event. Attempts to choose the right event if one is\n   * not specified.\n   *\n   * @param {Object} element Either a wrapped jQuery/jqLite node or a DOMElement\n   * @param {string} eventType Optional event type\n   * @param {Object=} eventData An optional object which contains additional event data (such as x,y\n   * coordinates, keys, etc...) that are passed into the event when triggered\n   */\n  window.browserTrigger = function browserTrigger(element, eventType, eventData) {\n    if (element && !element.nodeName) element = element[0];\n    if (!element) return;\n\n    eventData = eventData || {};\n    var relatedTarget = eventData.relatedTarget || element;\n    var keys = eventData.keys;\n    var x = eventData.x;\n    var y = eventData.y;\n\n    var inputType = (element.type) ? element.type.toLowerCase() : null,\n        nodeName = element.nodeName.toLowerCase();\n    if (!eventType) {\n      eventType = {\n        'text':            'change',\n        'textarea':        'change',\n        'hidden':          'change',\n        'password':        'change',\n        'button':          'click',\n        'submit':          'click',\n        'reset':           'click',\n        'image':           'click',\n        'checkbox':        'click',\n        'radio':           'click',\n        'select-one':      'change',\n        'select-multiple': 'change',\n        '_default_':       'click'\n      }[inputType || '_default_'];\n    }\n\n    if (nodeName === 'option') {\n      element.parentNode.value = element.value;\n      element = element.parentNode;\n      eventType = 'change';\n    }\n\n    keys = keys || [];\n    function pressed(key) {\n      return keys.indexOf(key) !== -1;\n    }\n\n    var evnt;\n    if (/transitionend/.test(eventType)) {\n      if (window.WebKitTransitionEvent) {\n        evnt = new window.WebKitTransitionEvent(eventType, eventData);\n        evnt.initEvent(eventType, false, true);\n      } else {\n        try {\n          evnt = new window.TransitionEvent(eventType, eventData);\n        } catch (e) {\n          evnt = window.document.createEvent('TransitionEvent');\n          evnt.initTransitionEvent(eventType, null, null, null, eventData.elapsedTime || 0);\n        }\n      }\n    } else if (/animationend/.test(eventType)) {\n      if (window.WebKitAnimationEvent) {\n        evnt = new window.WebKitAnimationEvent(eventType, eventData);\n        evnt.initEvent(eventType, false, true);\n      } else {\n        try {\n          evnt = new window.AnimationEvent(eventType, eventData);\n        } catch (e) {\n          evnt = window.document.createEvent('AnimationEvent');\n          evnt.initAnimationEvent(eventType, null, null, null, eventData.elapsedTime || 0);\n        }\n      }\n    } else if (/touch/.test(eventType) && supportsTouchEvents()) {\n      evnt = createTouchEvent(element, eventType, x, y);\n    } else if (/key/.test(eventType)) {\n      evnt = window.document.createEvent('Events');\n      evnt.initEvent(eventType, eventData.bubbles, eventData.cancelable);\n      evnt.view = window;\n      evnt.ctrlKey = pressed('ctrl');\n      evnt.altKey = pressed('alt');\n      evnt.shiftKey = pressed('shift');\n      evnt.metaKey = pressed('meta');\n      evnt.keyCode = eventData.keyCode;\n      evnt.charCode = eventData.charCode;\n      evnt.which = eventData.which;\n    } else {\n      evnt = window.document.createEvent('MouseEvents');\n      x = x || 0;\n      y = y || 0;\n      evnt.initMouseEvent(eventType, true, true, window, 0, x, y, x, y, pressed('ctrl'),\n          pressed('alt'), pressed('shift'), pressed('meta'), 0, relatedTarget);\n    }\n\n    /* we're unable to change the timeStamp value directly so this\n     * is only here to allow for testing where the timeStamp value is\n     * read */\n    evnt.$manualTimeStamp = eventData.timeStamp;\n\n    if (!evnt) return;\n\n    var originalPreventDefault = evnt.preventDefault,\n        appWindow = element.ownerDocument.defaultView,\n        fakeProcessDefault = true,\n        finalProcessDefault,\n        angular = appWindow.angular || {};\n\n    // igor: temporary fix for https://bugzilla.mozilla.org/show_bug.cgi?id=684208\n    angular['ff-684208-preventDefault'] = false;\n    evnt.preventDefault = function() {\n      fakeProcessDefault = false;\n      return originalPreventDefault.apply(evnt, arguments);\n    };\n\n    if (!eventData.bubbles || supportsEventBubblingInDetachedTree() || isAttachedToDocument(element)) {\n      element.dispatchEvent(evnt);\n    } else {\n      triggerForPath(element, evnt);\n    }\n\n    finalProcessDefault = !(angular['ff-684208-preventDefault'] || !fakeProcessDefault);\n\n    delete angular['ff-684208-preventDefault'];\n\n    return finalProcessDefault;\n  };\n\n  function supportsTouchEvents() {\n    if ('_cached' in supportsTouchEvents) {\n      return supportsTouchEvents._cached;\n    }\n    if (!window.document.createTouch || !window.document.createTouchList) {\n      supportsTouchEvents._cached = false;\n      return false;\n    }\n    try {\n      window.document.createEvent('TouchEvent');\n    } catch (e) {\n      supportsTouchEvents._cached = false;\n      return false;\n    }\n    supportsTouchEvents._cached = true;\n    return true;\n  }\n\n  function createTouchEvent(element, eventType, x, y) {\n    var evnt = new window.Event(eventType);\n    x = x || 0;\n    y = y || 0;\n\n    var touch = window.document.createTouch(window, element, Date.now(), x, y, x, y);\n    var touches = window.document.createTouchList(touch);\n\n    evnt.touches = touches;\n\n    return evnt;\n  }\n\n  function supportsEventBubblingInDetachedTree() {\n    if ('_cached' in supportsEventBubblingInDetachedTree) {\n      return supportsEventBubblingInDetachedTree._cached;\n    }\n    supportsEventBubblingInDetachedTree._cached = false;\n    var doc = window.document;\n    if (doc) {\n      var parent = doc.createElement('div'),\n          child = parent.cloneNode();\n      parent.appendChild(child);\n      parent.addEventListener('e', function() {\n        supportsEventBubblingInDetachedTree._cached = true;\n      });\n      var evnt = window.document.createEvent('Events');\n      evnt.initEvent('e', true, true);\n      child.dispatchEvent(evnt);\n    }\n    return supportsEventBubblingInDetachedTree._cached;\n  }\n\n  function triggerForPath(element, evnt) {\n    var stop = false;\n\n    var _stopPropagation = evnt.stopPropagation;\n    evnt.stopPropagation = function() {\n      stop = true;\n      _stopPropagation.apply(evnt, arguments);\n    };\n    patchEventTargetForBubbling(evnt, element);\n    do {\n      element.dispatchEvent(evnt);\n      // eslint-disable-next-line no-unmodified-loop-condition\n    } while (!stop && (element = element.parentNode));\n  }\n\n  function patchEventTargetForBubbling(event, target) {\n    event._target = target;\n    Object.defineProperty(event, 'target', {get: function() { return this._target;}});\n  }\n\n  function isAttachedToDocument(element) {\n    while ((element = element.parentNode)) {\n        if (element === window) {\n            return true;\n        }\n    }\n    return false;\n  }\n})();\n\n\n})(window, window.angular);\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular-mocks/angular-mocks.js","//import localForage from \"../localforage-build\"\nimport localForage from \"localforage\"\nimport {sync, promise} from \"../src/mock-injects\"\nimport AckOffline from \"../src/ack-offline.service\"\n\nfunction testBasicSetCache(data){\n  expect(typeof data).toEqual('object')\n  expect(typeof data._timestamp).toEqual('number')\n}\n\nexport default function() {\n  let ackOffline, $http\n\n  beforeEach(inject(function(_$http_) {\n    $http = _$http_\n    localForage.setItem(\"offline-foo\")\n  }))\n\n  beforeEach(function() {\n    ackOffline = new AckOffline($http)\n  })\n\n  describe(\"#setItem\", function() {\n    it(\"gets offline data from local storage\", promise(()=>\n      localForage.setItem(\"offline-foo\",\"bar\")\n      .then(()=>ackOffline.get(\"foo\"))\n      .then(data => expect(data).toEqual(\"bar\"))\n    ))\n  })\n\n  describe(\"#set\", function() {\n    it(\"sets data into cache\", promise(()=>\n      ackOffline.set(\"foo\", \"bar\")\n      .then(()=>ackOffline.get(\"foo\"))\n      .then(data => expect(data).toEqual(\"bar\"))\n    ))\n  })\n\n  describe(\"#getCache\", function() {\n    it(\"retrieves cache from local storage\", promise(()=>\n      localForage.setItem(\"offline-foo\", \"bar\")\n      .then(()=>localForage.getItem(\"offline-foo\"))\n      .then(cache => {\n        expect(cache).toEqual(\"bar\")\n      })\n      .then(()=>ackOffline.getCache(\"foo\"))\n      .then(cache => {\n        expect(cache).toEqual(\"bar\")\n      })\n    ))\n\n    describe(\"when cache data is a collection\", function() {\n      it(\"considers an 0-length cache valid\", promise(()=>\n        ackOffline.setCache('foo','bar')\n        .then(()=>localForage.getItem(\"offline-foo\"))\n        .then(data=>{\n          expect(typeof data).toEqual('object')\n          expect(typeof data._timestamp).toEqual('number')\n          expect(typeof data.cache).toEqual('string')\n          expect(data.cache).toEqual('bar')\n        })\n        .then(()=>ackOffline.getCache(\"foo\"))\n        .then(cache => expect(cache).toEqual(\"bar\"))\n      ))\n    })\n\n    describe(\"when cache data is an object\", function() {\n      it(\"considers an empty object valid\", promise(()=>\n        ackOffline.setCache(\"foo\")\n        .then( data=>{\n          testBasicSetCache(data)\n          expect(typeof data.cache).toEqual('undefined')\n        })\n        .then( ()=>ackOffline.getCache(\"foo\") )\n        .then( cache => expect(typeof cache).toEqual(\"undefined\") )\n      ))\n    })\n\n    it(\"handles empty data storage\", promise(()=>\n      localForage.setItem(\"offline-foo\")\n      .then( d=>expect(d).toBe(null) )\n      .then(()=>ackOffline.getCache(\"foos\") )\n      .catch(e=>{\n        expect(e.message).toBe('No valid cache found for foos')\n      })\n    ))\n\n    describe(\"with expiration\", function() {\n      it(\"returns cache if not expired\", promise(()=>\n        ackOffline.setCache(\"foo\",\"bar\")\n        .then(()=>localForage.getItem(\"offline-foo\") )\n        .then(data=>{\n          var timeDiff = Date.now() - data._timestamp\n          expect(timeDiff).toBeLessThan( 200 )\n          expect(data.cache).toBe( \"bar\" )\n        })\n        .then( ()=>ackOffline.getCache(\"foo\") )\n        .then( cache=>expect(cache).toBeDefined() )\n      ))\n\n      it(\"errors if expired\", promise(()=>\n        localForage.setItem(\"offline-foo\", {\n          _timestamp: Date.now() - 100,\n          cache: \"foo\"\n        })\n        .then(()=>ackOffline.getCache(\"foo\", { expires: 100 }))\n        .then(()=>{\n          throw new Error('not supposed to succeed here')\n        })\n        .catch(e=>expect(e.message).toBe('No valid cache found for foo'))\n      ))\n    })\n  })\n\n  describe(\"#setCache\", function() {\n    /*\n    let clock\n    beforeEach(() => clock = sinon.useFakeTimers())\n    afterEach(() => clock.restore())\n    */\n\n    it(\"sets data into cache\", promise(()=>\n      ackOffline.setCache(\"foo\", {data:\"bar8\"})\n      .then(data=>{\n        testBasicSetCache(data)\n        expect(data.cache.data).toEqual(\"bar8\")\n      })\n    ))\n\n    it(\"does not overwrite non-cache data\", promise(()=>\n      localForage.setItem(\"offline-foo\",{\n        _timestamp: 1234,\n        cache: {data0:\"old-bar\"},\n        queue: [1,2,3]\n      })\n      .then( ()=>ackOffline.setCache(\"foo\", { data: \"bar\" }) )\n      .then(data=>{\n        expect(typeof data.queue).toBe('object')\n        expect(data.queue.constructor).toBe(Array)\n        expect(data.queue.length).toBe(3)\n        expect(typeof data.cache).toBe('object')\n        expect(data.cache.data0).toBe('old-bar')\n        expect(data.cache.data).toBe('bar')\n      })\n    ))\n  })\n\n  describe(\"#cacheResponse\", function() {\n    /*\n    let clock\n    beforeEach(() => clock = sinon.useFakeTimers())\n    afterEach(() => clock.restore())\n    */\n\n    it(\"sets data into cache\", promise(()=>\n      ackOffline.cacheResponse(\"foo\", {data: \"bar\"})\n      .then(data=>{\n        expect(typeof data).toBe('object')\n        expect(typeof data._timestamp).toBe('number')\n        expect(typeof data.cache).toBe('string')\n        expect(data.cache).toBe('bar')\n      })\n    ))\n\n    it(\"does not overwrite non-cache data\", promise(()=>\n      localForage.setItem(\"offline-foo\",{\n        _timestamp: 1234,\n        cache: \"old foo\",\n        queue: [1,2,3]\n      })\n      .then(()=>ackOffline.cacheResponse(\"foo\", { data: \"bar\" }))\n      .then(data=>{\n        expect(typeof data.queue).toBe('object')\n        expect(data.queue.constructor).toBe(Array)\n        expect(data.queue.length).toBe(3)\n        expect(typeof data.cache).toBe('string')\n        expect(data.cache).toBe('bar')\n      })\n    ))\n  })\n\n  describe(\"#getQueue\", function() {\n    it(\"retrieves queue from local storage\", promise(()=>\n      localForage.setItem(\"offline-foo\",{\n        queue: [{ data: \"bar\" }]\n      })\n      .then(()=>ackOffline.getQueue(\"foo\"))\n      .then(data => {\n        expect(typeof data).toBe('object')\n        expect(data.constructor).toBe(Array)\n        expect(data.length).toBe(1)\n        expect(typeof data[0]).toBe('object')\n        expect(typeof data[0].data).toBe('string')\n        expect(data[0].data).toBe('bar')\n      })\n    ))\n  })\n\n  describe(\"#enqueue\", function() {\n    it(\"sets data into queue\", promise(()=>\n      localForage.setItem(\"offline-foo\")\n      .then( ()=>ackOffline.enqueue(\"foo\", {data:\"bar\"}) )\n      .then( ()=>ackOffline.getCache(\"foo\") )\n      .then(data=>{       \n        expect(typeof data.queue).toBe('object')\n        expect(data.queue.length).toBe(1)\n        expect(typeof data.queue[0].data).toBe('string')\n        expect(data.queue[0].data).toBe('bar')\n      })      \n    ))\n\n    it(\"sets array of data into queue\", promise(()=>\n      localForage.setItem(\"offline-foo\",{\n        queue: [{ data: \"bar\" }]\n      })\n      .then( ()=>ackOffline.enqueue(\"foo\", [{ data: \"baz\" }, { data: \"qux\" }]) )\n      .then(data=>{\n        expect(data.queue.length).toBe(3)\n        expect(data.queue[0].data).toBe('bar')\n        expect(data.queue[1].data).toBe('baz')\n        expect(data.queue[2].data).toBe('qux')\n      })\n    ))\n\n    it(\"does not overwrite data\", promise(()=>\n      localForage.setItem(\"offline-foo\",{\n        _timestamp: 1234,\n        cache: \"old foo\",\n        queue: [{ data: \"foo\" }]\n      })\n      .then( ()=>ackOffline.enqueue(\"foo\", { data: \"bar\" }) )\n      .then(data=>{\n        expect(data._timestamp).toBe(1234)\n        expect(data.cache).toBe(\"old foo\")\n        expect(data.queue.length).toBe(2)\n        expect(data.queue[0].data).toBe('foo')\n        expect(data.queue[1].data).toBe('bar')\n      })\n    ))\n  })\n\n  describe(\"#clearQueue\", function() {\n    it(\"clears queue\", promise(()=>\n      localForage.setItem(\"offline-foo\", {\n        _timestamp: 1234,\n        cache: \"foo\",\n        queue: [1,2,3]\n      })\n      .then( ()=>ackOffline.clearQueue(\"foo\") )\n      .then( ()=>ackOffline.get(\"foo\") )\n      .then(data=>{\n        expect(typeof data).toBe('object')\n        expect(typeof data.queue).toBe('object')\n        expect(data.queue.constructor).toBe(Array)\n        expect(data.queue.length).toBe(0)\n      })\n    ))\n  })\n\n  describe(\"#registerQueueHandler\", function() {\n    it(\"registers handler\", sync(()=>{\n      expect(ackOffline.handlers.length).toBe(0)\n\n      var spy = function(){}\n      spy.extraName = 'registers-handler'\n\n      ackOffline.registerQueueHandler(\"foo\", spy)\n      \n      expect(ackOffline.handlers.length).toBe(1)\n      expect(typeof ackOffline.handlers[0]).toBe('object')\n      expect(ackOffline.handlers[0].name).toBe('foo')\n      expect(ackOffline.handlers[0].handler.extraName).toBe(spy.extraName)\n    }))\n  })\n\n  describe(\"#processQueues\", function() {\n    it(\"iterates over all handlers\", promise(()=>{\n      const fooSpy = function(a){\n        fooSpy.callLog.push(a)\n      }\n      fooSpy.extraName = 'foo-spy'\n      fooSpy.callLog = []\n\n      const barSpy = function(b){\n        barSpy.callLog.push(b)\n      }\n      barSpy.extraName = 'bar-spy'\n      barSpy.callLog = []\n\n      ackOffline.handlers = [\n        { name: \"foo\", handler: fooSpy },\n        { name: \"bar\", handler: barSpy }\n      ]\n      \n      return localForage.setItem(\"offline-foo\",{queue: [1,2]})\n      .then( ()=>localForage.setItem(\"offline-bar\",{queue: [3,4]}) )\n      .then( ()=>ackOffline.processQueues() )\n      .then(()=>{      \n        expect(fooSpy.callLog.length).toBe(2)\n        expect(fooSpy.callLog[0]).toBe(1)\n        expect(fooSpy.callLog[1]).toBe(2)\n\n        expect(barSpy.callLog.length).toBe(2)\n        expect(barSpy.callLog[0]).toBe(3)\n        expect(barSpy.callLog[1]).toBe(4)\n      })\n    }))\n\n    it(\"empties queues when complete\", promise(()=>{\n      ackOffline.handlers = [{ name: \"foo\", handler: () => {} }]\n      \n      return localForage.setItem(\"offline-foo\", {queue: [1,2]})\n      .then(()=>ackOffline.processQueues())\n      .then(()=>ackOffline.getQueue('foo'))\n      .then(data=>{\n        expect(data.length).toBe(0)\n      })\n    }))\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./test-src/test-offline-storage.js","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.4.3\n    https://mozilla.github.io/localForage\n    (c) 2013-2016 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(2);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"2\":2}],2:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(1);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"1\":1}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here; just UA test for Safari (which, as of\n        // iOS 8/Yosemite, doesn't properly support IndexedDB).\n        // IndexedDB support is broken and different from Blink's.\n        // This is faster than the test case (and it's sync), so we just\n        // do this. *SIGH*\n        // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        if (typeof openDatabase !== 'undefined' && typeof navigator !== 'undefined' && navigator.userAgent && /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)) {\n            return false;\n        }\n\n        return idb && typeof idb.open === 'function' &&\n        // Some Samsung/HTC Android 4.0-4.3 devices\n        // have older IndexedDB specs; if this isn't available\n        // their IndexedDB is too old for us to use.\n        // (Replaces the onupgradeneeded test.)\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined' && typeof _dereq_ !== 'undefined') {\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/9c25a23/src/adapters/idb/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(txn) {\n    return new Promise$1(function (resolve) {\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function () {\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n\n            var req = store.put(value, key);\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // TODO: Try to re-run the transaction.\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver);\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(function (driver) {\n                            self._extend(driver);\n                            setDriverToConfig();\n\n                            self._ready = self._initStorage(self._config);\n                            return self._ready;\n                        })[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/localforage/dist/localforage.js\n// module id = 4\n// module chunks = 0","//import localForage from \"localforage/dist/localforage.js\"\nimport localForage from \"localforage\"\n//import localForage from \"./localforage-build\"\n\nconst supportsNav = typeof(navigator)!='undefined'\n\nexport default class AckOffline{\n  constructor($http){\n    this.$http = $http\n    this.prefix = \"offline\"\n    this.handlers = []\n  }\n\n\n  remove(name){\n    return localForage.removeItem(this.prefix+'-'+name)\n  }\n\n  get(name) {\n    return localForage.getItem(this.prefix+'-'+name)\n  }\n\n  set(name, data) {\n    return localForage.setItem(this.prefix+'-'+name, data)\n  }\n\n  _validate(data, {expires}) {\n    const exists = data !== null && typeof data.cache !== \"undefined\"\n    return exists && !this._expired(data._timestamp, expires)\n  }\n\n  _expired(stamp, expires){\n    const diff = Date.now() - expires\n    const expired = stamp<=diff\n    return expires && expired ? true : false\n  }\n\n  /**\n    Creates que handler. Returns self. Most likely, use newQueModel\n    @options - {\n      handler : dataArray=> - overrides $http posting for que processing\n      onData : data=> - callback fired everytime data is retrieved\n      expires: Number - how many milisecs can a saved transmission live in cache\n    }\n  */\n  newQueModel(name,options={}){\n    options.name = name\n    this.addQueModel(name, options)\n    return new QueModel(this, options)\n  }\n\n  /**\n    Creates que handler. Returns self. Most likely, use newQueModel\n    @options - {\n      handler : dataArray=> - overrides $http posting for que processing\n      onData : data=> - callback fired everytime data is retrieved\n    }\n  */\n  addQueModel(name,options={}){\n    return this.registerQueueHandler(name, trans=>{\n      let prom = this.$http(trans)\n\n      if(options.onData){\n        prom = prom.then(response=>{\n          if(response.data){\n            options.onData(response.data)\n          }\n        })\n      }\n\n      return prom.catch(e=>this.ErrorHandler.record(e))\n    })\n  }\n\n  paramCache(name, options={}){\n    options.param = options.param || []\n    return this.getCache(name, options)\n  }\n\n  paramSaveCache(name, options){\n    return this.paramCache(name, options)\n    .then(items=>this.setCache(name,items))\n  }\n\n  getCache(name, options={}){\n    return this.get(name)\n    .then(data => {\n      if( this._validate(data, options) ){\n        return data.cache\n      }\n\n      if(data){\n        if(data.cache==null && data._timestamp==null){\n          return data\n        }\n        \n        if(!options.expires){\n          return data.cache\n        }\n\n        const isCheckExpired = data && data._timestamp && options.allowExpired\n        const expired = data && data._timestamp && this._expired(data._timestamp, options.expires)\n        const isAllowExpired = isCheckExpired && expired\n        if(isAllowExpired){\n          return data.cache\n        }\n\n        if(expired){\n          const err = new Error('Cache expired for '+name)\n          err.code = 401\n        }\n      }\n\n      if(options.param)return options.param\n\n      var err = new Error('No valid cache found for '+name)\n      err.code = 404\n\n      return new Promise((res,rej)=>{\n        rej(err)\n      })\n    })\n  }\n\n  setCache(name, cache) {\n    const newCache = {\n      _timestamp: Date.now()//,cache: response.data\n    }\n\n    return this.get(name)\n    .then( data=>{\n      data = data && data.constructor!=String ? data : {}\n\n      Object.assign(data, newCache)\n      if(cache && cache.constructor==String){\n        data.cache = cache\n      }else if(data.cache && data.cache.constructor!=String){\n        Object.assign(data.cache, cache)\n      }else{\n        data.cache = cache\n      }\n\n      return data\n    })//paste cache over cache, leave all else alone\n    .then( data=>this.set(name, data) )\n  }\n\n  cacheResponse(name, response) {\n    return this.setCache(name, response.data)\n  }\n\n  getQueue(name) {\n    return this.get(name)\n    .then(data => data&&data.queue?data.queue:[])\n  }\n\n  setQueue(name, queue) {\n    return this.get(name)\n    .then(data => Object.assign({}, data, {queue}))\n    .then(data => this.set(name, data))\n  }\n\n  clearQueue(name) {\n    return this.get(name)\n    .then(data => {\n      data.queue = []\n      this.set(name, data)\n    })\n  }\n\n  /** post/put que */\n  enqueue(name, queueData) {\n    if(supportsNav && navigator.onLine) {\n      const handler = this.handlers.find(handler => handler.name === name)\n      if(handler)return handler(queueData)\n    }\n\n    return this.get(name)\n    .then(data => {\n      data = data || {}\n      data.queue = data.queue || []\n      \n      if(queueData.forEach){\n        queueData.forEach(x=>{\n          data.queue.push( x )\n        })\n      }else{\n        data.queue.push( queueData )\n      }\n      return this.set(name, data)\n    })\n  }\n\n  registerQueueHandler(name, handler) {\n    handler = handler || this.getQueHandler.bind(this)\n    this.handlers.push({name, handler})\n    return this\n  }\n\n  processQueues(){\n    let x=this.handlers.length-1, promises = []\n\n    for(; x >= 0; --x){\n      let hand = this.handlers[x]\n\n      let prom = this.getQueue(hand.name)\n      .then(queue => queue.forEach(x => hand.handler(x)))\n      .then(() => this.clearQueue(hand.name))\n\n      promises.push(prom)\n    }\n\n    return Promise.all(promises)\n  }\n\n  getQueHandler(item) {\n    return this.$http(item)\n  }\n\n  promiseNameArray(){\n    let keys = []\n    return localForage.iterate((_, k) => {\n      if (k.startsWith(this.prefix)) {\n        keys.push( k.substring(this.prefix.length+1, k.length) )\n      }\n    })\n    .then(()=>keys)\n  }\n\n  clear() {\n    this.promiseNameArray().then((keys) => keys.forEach(name=>this.remove(name)))\n  }\n\n}\n\nAckOffline.$inject = [\"$http\"]\n\n\n/**\n  @config {expires, allowExpired, name}\n*/\nclass QueModel{\n  constructor(AckOffline, config){\n    this.AckOffline = AckOffline\n    this.config = config\n  }\n\n  mergeConfig(config){\n    Object.assign(config, this.config)\n    this.config = config\n    return this\n  }\n\n  get(){\n    return this.AckOffline.get(this.config.name)\n  }\n\n  set(data){\n    return this.AckOffline.set(this.config.name, data)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ack-offline.service.js"],"sourceRoot":""}